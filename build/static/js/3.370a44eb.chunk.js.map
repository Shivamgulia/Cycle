{"version":3,"sources":["components/How/UseDes.module.css","resources/how/1_locateDownload.jpg","resources/how/2_installUsingPackageInstaller.jpg","resources/how/3_ClickInstall.jpg","resources/how/4_InstallAnyway.jpg","resources/how/5_GiveCameraPermission.jpg","resources/how/6_signUpWithGoogle.jpg","resources/how/7_selectCollegeMail.jpg","resources/how/8_enterPassword.jpg","resources/how/9_nowYouCanLogIn.jpg","resources/how/10_homepage.jpg","resources/how/11_afterTappingScanQR.jpg","resources/how/12_clickRent.jpg","resources/how/13_cycleIsRented.jpg","components/How/UseDes.js","pages/HowToUse.js","components/auth/AuthForm.module.css","components/auth/AuthForm.js","pages/AuthPage.js"],"names":["module","exports","UseDes","className","classes","download","href","class","button56","role","images1","src","one","alt","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","HowToUse","AuthForm","history","useHistory","useState","isVerified","setIsVerified","showPassword","setShowPassword","authCtx","useContext","AuthContext","emailInputRef","useRef","passwordInputRef","isLoading","setIsLoading","path","auth","onSubmit","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","headers","then","res","ok","json","data","errorMessage","error","message","Error","experationTime","Date","getTime","login","token","_id","cycleid","toISOString","replace","catch","err","alert","control","htmlFor","type","id","required","ref","onClick","sitekey","onChange","actions","push","AuthPage"],"mappings":"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","file":"static/js/3.370a44eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"images1\":\"UseDes_images1__3uuQ_\",\"button56\":\"UseDes_button56__3Fmla\",\"download\":\"UseDes_download__2zMuh\"};","export default __webpack_public_path__ + \"static/media/1_locateDownload.310c0079.jpg\";","export default __webpack_public_path__ + \"static/media/2_installUsingPackageInstaller.f01f3e15.jpg\";","export default __webpack_public_path__ + \"static/media/3_ClickInstall.6ec0e8b4.jpg\";","export default __webpack_public_path__ + \"static/media/4_InstallAnyway.f881ce51.jpg\";","export default __webpack_public_path__ + \"static/media/5_GiveCameraPermission.59219b0f.jpg\";","export default __webpack_public_path__ + \"static/media/6_signUpWithGoogle.5d59402a.jpg\";","export default __webpack_public_path__ + \"static/media/7_selectCollegeMail.67700002.jpg\";","export default __webpack_public_path__ + \"static/media/8_enterPassword.8ebf9d77.jpg\";","export default __webpack_public_path__ + \"static/media/9_nowYouCanLogIn.36b5d864.jpg\";","export default __webpack_public_path__ + \"static/media/10_homepage.ddcb3f01.jpg\";","export default __webpack_public_path__ + \"static/media/11_afterTappingScanQR.97230711.jpg\";","export default __webpack_public_path__ + \"static/media/12_clickRent.c05e2ff3.jpg\";","export default __webpack_public_path__ + \"static/media/13_cycleIsRented.817f158e.jpg\";","import classes from './UseDes.module.css';\nimport one from '../../resources/how/1_locateDownload.jpg';\nimport two from '../../resources/how/2_installUsingPackageInstaller.jpg';\nimport three from '../../resources/how/3_ClickInstall.jpg';\nimport four from '../../resources/how/4_InstallAnyway.jpg';\nimport five from '../../resources/how/5_GiveCameraPermission.jpg';\nimport six from '../../resources/how/6_signUpWithGoogle.jpg';\nimport seven from '../../resources/how/7_selectCollegeMail.jpg';\nimport eight from '../../resources/how/8_enterPassword.jpg';\nimport nine from '../../resources/how/9_nowYouCanLogIn.jpg';\nimport ten from '../../resources/how/10_homepage.jpg';\nimport eleven from '../../resources/how/11_afterTappingScanQR.jpg';\nimport twelve from '../../resources/how/12_clickRent.jpg';\nimport thirteen from '../../resources/how/13_cycleIsRented.jpg';\n\nexport default function UseDes() {\n  return (\n    <div>\n      <h1>About</h1>\n      <p>\n        Green rides is an application developed to make the renting of cycles\n        easier just by scanning the qr code present on cycles. Students can rent\n        the cycles from any stand and then return it to the guard present in any\n        stand.\n      </p>\n      <h1>How to Use Green Rides</h1>\n      <ol>\n        <li>Download the Green Rides app with the link below.</li>\n        <div className={classes.download}>\n          <a href=\"\">\n            <button class={classes.button56} role=\"button\">\n              Download the App\n            </button>\n          </a>\n        </div>\n        <li>\n          Installing : locate the downloaded app. Install the app using package\n          installer.\n        </li>\n        <div className={classes.images1}>\n          <img src={one} alt=\"\" />\n          <img src={two} alt=\"\" />\n          <img src={three} alt=\"\" />\n          <img src={four} alt=\"\" />\n          <img src={five} alt=\"\" />\n          {/* <img src={six} alt=\"\" /> */}\n        </div>\n        <li>\n          Sign Up using your University email Id in the signup option. Do not\n          use your personal email if you do you will have to uninstall and then\n          reinstall the app. After that you will be prompted to create a\n          password for your account, create a password and create an account.\n        </li>\n        <div className={classes.images1}>\n          <img src={six} alt=\"\" />\n          <img src={seven} alt=\"\" />\n          <img src={eight} alt=\"\" />\n        </div>\n        <li>Now, you can eaily login with you email and password.</li>\n        <div className={classes.images1}>\n          <img src={nine} alt=\"\" />\n          <img src={ten} alt=\"\" />\n        </div>\n        <li>\n          To Rent a cycle just go the the rent option, scan the QR code present\n          on the cycle and confirm that you want to rent this cycle.\n        </li>\n        <div className={classes.images1}>\n          <img src={eleven} alt=\"\" />\n          <img src={twelve} alt=\"\" />\n          <img src={thirteen} alt=\"\" />\n        </div>\n        <li>\n          To Return the cycle just take it to the guard, he will scan the qr\n          code with his device and return the cycle.\n        </li>\n      </ol>\n    </div>\n  );\n}\n","import UseDes from '../components/How/UseDes';\n\nexport default function HowToUse() {\n  return <UseDes />;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2ZSKH\",\"control\":\"AuthForm_control__1evQ4\",\"actions\":\"AuthForm_actions__25Vmz\",\"toggle\":\"AuthForm_toggle__1Wxr6\"};","import { useState, useRef, useContext, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport HowToUse from '../../pages/HowToUse';\nimport { Route } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n\n  const [isVerified, setIsVerified] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  function onChange(value) {\n    setIsVerified(true);\n    // console.log('Captcha value:', value);\n  }\n\n  // const verifyCallback = () => {\n  //   setIsVerified(true);\n  // };\n  // const load = () => {\n  //   setIsVerified(false);\n  // };\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n\n    if (isVerified) {\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n\n      setIsLoading(true);\n\n      // const url = 'https://cycle-api.azurewebsites.net/users/login'; //login send req url\n      // const url = 'http://64.226.69.16/users/login';\n      const url = 'https://cycle-modified-api.azurewebsites.net/users/login';\n      // const url = 'https://app.hbtu.ac.in/users/login';\n\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((res) => {\n          setIsLoading(false);\n          if (res.ok) {\n            return res.json();\n          } else {\n            return res.json().then((data) => {\n              let errorMessage = 'Authentication Failed';\n              if (data && data.error && data.error.message) {\n                setIsLoading(false);\n                errorMessage = data.error.message;\n              }\n              throw new Error(errorMessage);\n            });\n          }\n        })\n        .then((data) => {\n          const experationTime = new Date(new Date().getTime() + +36000000);\n          authCtx.login(\n            data,\n            enteredPassword,\n            data.token,\n            data._id,\n            data.role,\n            data.cycleid,\n            experationTime.toISOString()\n          );\n          history.replace('/');\n        })\n        .catch((err) => {\n          alert(err.message);\n        });\n    } else {\n      alert('Verify if you are human');\n    }\n  };\n\n  const signupHandler = () => {\n    history.push('/signup');\n  };\n\n  return (\n    <Fragment>\n      <Route path=\"/auth/howtouse\">\n        {/* {loggedIn && <Redirect to=\"/mainPage\" />} */}\n        {/* {!loggedIn && <Signup />} */}\n        <HowToUse />\n      </Route>\n      <section className={classes.auth}>\n        <h1>Login</h1>\n        <form onSubmit={submitionHandler}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Your Email</label>\n            <input type=\"userName\" id=\"userName\" required ref={emailInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Your Password</label>\n            <input\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              required\n              ref={passwordInputRef}\n            />\n          </div>\n          <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n          <div className=\"centered\">\n            {/* <Recaptcha\n            sitekey=\"6LdUKmUlAAAAAH_t6EjIE4ev4OK7Bw0IjQVmkGbq\"\n            render=\"explicit\"\n            verifyCallback={verifyCallback}\n            onloadCallback={load}\n          /> */}\n            <ReCAPTCHA\n              sitekey=\"6LdUKmUlAAAAAH_t6EjIE4ev4OK7Bw0IjQVmkGbq\"\n              onChange={onChange}\n            />\n          </div>\n          <div className={classes.actions}>\n            {!isLoading && <button>Login</button>}\n            {isLoading && <p>Sending Request....</p>}\n          </div>\n        </form>\n        <div className={classes.actions}>\n          <button onClick={signupHandler}> Sign Up</button>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/auth/AuthForm';\n\nconst AuthPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}