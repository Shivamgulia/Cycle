{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  cycleid: '',\n  name: '',\n  login: (token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('name');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('name');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    name: storedName,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredData();\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialName;\n\n  if (tokenData) {\n    initialName = tokenData.name;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n  }\n\n  const [data, setData] = useState(initialName);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const addCycleHandler = cycle => {\n    localStorage.setItem('cycleid', cycle);\n  };\n\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycle: cycle,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"YHeEA/mmkhyor7aKCEs10Ril0Pc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","role","cycleid","name","login","logout","addCycle","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedCycle","storedData","remainingTime","removeItem","storedName","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialName","data","setData","setUserId","setRole","setToken","cycle","setCycle","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","loginHandler","JSON","stringify","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  cycleid: '',\n  name: '',\n  login: (token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('name');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('name');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    name: storedName,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialName;\n  if (tokenData) {\n    initialName = tokenData.name;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n  }\n  const [data, setData] = useState(initialName);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycle) => {\n    localStorage.setItem('cycleid', cycle);\n  };\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycle: cycle,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}