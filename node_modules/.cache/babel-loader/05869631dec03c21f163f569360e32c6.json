{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState,Fragment}from\"react\";import{Prompt}from\"react-router-dom\";import Card from\"../UI/Card\";import LoadingSpinner from\"../UI/LoadingSpinner\";import classes from\"./QuoteForm.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteForm=function QuoteForm(props){var authorInputRef=useRef();var textInputRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),focusState=_useState2[0],setFocusState=_useState2[1];function submitFormHandler(event){event.preventDefault();var enteredAuthor=authorInputRef.current.value;var enteredText=textInputRef.current.value;// optional: Could validate here\nprops.onAddQuote({author:enteredAuthor,text:enteredText});}var finishEnteringHandler=function finishEnteringHandler(){setFocusState(false);};var formFocusHandler=function formFocusHandler(){setFocusState(true);console.log(focusState);};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Prompt,{when:focusState,message:function message(location){return\"Are you sure you want to leave this page. All your data will be lost\";}}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{onFocus:formFocusHandler,className:classes.form,onSubmit:submitFormHandler,children:[props.isLoading&&/*#__PURE__*/_jsx(\"div\",{className:classes.loading,children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"author\",children:\"Author\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"author\",ref:authorInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"text\",rows:\"5\",ref:textInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{onClick:finishEnteringHandler,className:\"btn\",children:\"Add Quote\"})})]})})]});};export default QuoteForm;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["useRef","useState","Fragment","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","authorInputRef","textInputRef","focusState","setFocusState","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","finishEnteringHandler","formFocusHandler","console","log","location","form","isLoading","loading","control","actions"],"mappings":"qKAAA,OAASA,MAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,kBAAvB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,cAAc,CAAGT,MAAM,EAA7B,CACA,GAAMU,CAAAA,YAAY,CAAGV,MAAM,EAA3B,CACA,cAAoCC,QAAQ,CAAC,KAAD,CAA5C,wCAAOU,UAAP,eAAmBC,aAAnB,eAEA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,aAAa,CAAGP,cAAc,CAACQ,OAAf,CAAuBC,KAA7C,CACA,GAAMC,CAAAA,WAAW,CAAGT,YAAY,CAACO,OAAb,CAAqBC,KAAzC,CAEA;AAEAV,KAAK,CAACY,UAAN,CAAiB,CACfC,MAAM,CAAEL,aADO,CAEfM,IAAI,CAAEH,WAFS,CAAjB,EAID,CAED,GAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClCX,aAAa,CAAC,KAAD,CAAb,CACD,CAFD,CAIA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BZ,aAAa,CAAC,IAAD,CAAb,CACAa,OAAO,CAACC,GAAR,CAAYf,UAAZ,EACD,CAHD,CAIA,mBACE,MAAC,QAAD,yBACE,KAAC,MAAD,EACE,IAAI,CAAEA,UADR,CAEE,OAAO,CAAE,iBAACgB,QAAD,QACP,sEADO,EAFX,EADF,cAOE,KAAC,IAAD,wBACE,cACE,OAAO,CAAEH,gBADX,CAEE,SAAS,CAAElB,OAAO,CAACsB,IAFrB,CAGE,QAAQ,CAAEf,iBAHZ,WAKGL,KAAK,CAACqB,SAAN,eACC,YAAK,SAAS,CAAEvB,OAAO,CAACwB,OAAxB,uBACE,KAAC,cAAD,IADF,EANJ,cAWE,aAAK,SAAS,CAAExB,OAAO,CAACyB,OAAxB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAEtB,cAApC,EAFF,GAXF,cAeE,aAAK,SAAS,CAAEH,OAAO,CAACyB,OAAxB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,iBAAU,EAAE,CAAC,MAAb,CAAoB,IAAI,CAAC,GAAzB,CAA6B,GAAG,CAAErB,YAAlC,EAFF,GAfF,cAmBE,YAAK,SAAS,CAAEJ,OAAO,CAAC0B,OAAxB,uBACE,eAAQ,OAAO,CAAET,qBAAjB,CAAwC,SAAS,CAAC,KAAlD,uBADF,EAnBF,GADF,EAPF,GADF,CAqCD,CAhED,CAkEA,cAAehB,CAAAA,SAAf","sourcesContent":["import { useRef, useState, Fragment } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [focusState, setFocusState] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText,\n    });\n  }\n\n  const finishEnteringHandler = () => {\n    setFocusState(false);\n  };\n\n  const formFocusHandler = () => {\n    setFocusState(true);\n    console.log(focusState);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={focusState}\n        message={(location) =>\n          \"Are you sure you want to leave this page. All your data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}