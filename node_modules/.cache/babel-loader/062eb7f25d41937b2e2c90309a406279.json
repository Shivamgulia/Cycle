{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/QrScaner/Scanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport Button from '../UI/Button';\nimport classes from './Scanner.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scanner = props => {\n  _s();\n\n  const [scan, setScan] = useState(false);\n\n  const startReader = () => {\n    if (scan) setScan(false);\n    if (!scan) setScan(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        OnClick: startReader,\n        children: \"Open Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), scan && /*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: (result, error) => {\n        if (!!result) {\n          // setData(result?.text);\n          props.scan(result === null || result === void 0 ? void 0 : result.text);\n        }\n\n        if (!!error) {\n          console.info(error);\n        }\n      },\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Scanner, \"ZS1GdzYHPkWHjxrOA9HI0REkauU=\");\n\n_c = Scanner;\nexport default Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/QrScaner/Scanner.js"],"names":["React","useState","QrReader","Button","classes","Scanner","props","scan","setScan","startReader","action","result","error","text","console","info","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIF,IAAJ,EAAUC,OAAO,CAAC,KAAD,CAAP;AACV,QAAI,CAACD,IAAL,EAAWC,OAAO,CAAC,IAAD,CAAP;AACZ,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACM,MAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,IAAI,iBACH,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,CAACI,MAAD,EAASC,KAAT,KAAmB;AAC3B,YAAI,CAAC,CAACD,MAAN,EAAc;AACZ;AACAL,UAAAA,KAAK,CAACC,IAAN,CAAWI,MAAX,aAAWA,MAAX,uBAAWA,MAAM,CAAEE,IAAnB;AACD;;AAED,YAAI,CAAC,CAACD,KAAN,EAAa;AACXE,UAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACD;AACF,OAVH;AAWE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT;AAXT;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA9BD;;GAAMX,O;;KAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport Button from '../UI/Button';\n\nimport classes from './Scanner.module.css';\nconst Scanner = (props) => {\n  const [scan, setScan] = useState(false);\n\n  const startReader = () => {\n    if (scan) setScan(false);\n    if (!scan) setScan(true);\n  };\n\n  return (\n    <div>\n      <div className={classes.action}>\n        <button OnClick={startReader}>Open Camera</button>\n      </div>\n      {scan && (\n        <QrReader\n          onResult={(result, error) => {\n            if (!!result) {\n              // setData(result?.text);\n              props.scan(result?.text);\n            }\n\n            if (!!error) {\n              console.info(error);\n            }\n          }}\n          style={{ width: '100%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scanner;\n"]},"metadata":{},"sourceType":"module"}