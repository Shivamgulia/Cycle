{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useCallback}from\"react\";import{useParams}from\"react-router-dom\";import classes from\"./Comments.module.css\";import NewCommentForm from\"./NewCommentForm\";import LoadingSpinner from\"../UI/LoadingSpinner\";import CommentsList from\"./CommentsList\";import useHttp from\"../../components/hooks/use-http\";import{getAllComments}from\"../lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAddingComment=_useState2[0],setIsAddingComment=_useState2[1];var params=useParams();var _useHttp=useHttp(getAllComments),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedComments=_useHttp.data;var quoteId=params.quoteId;useEffect(function(){sendRequest(quoteId);},[quoteId,sendRequest]);var startAddCommentHandler=function startAddCommentHandler(){setIsAddingComment(true);};var addedCommentsHandler=useCallback(function(){sendRequest(quoteId);},[quoteId,sendRequest]);var comments;if(status===\"pending\"){comments=/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(status===\"completed\"){comments=/*#__PURE__*/_jsx(CommentsList,{comments:loadedComments});}if(status===\"completed\"&&(!loadedComments||loadedComments.length===0)){comments=/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:\"No Comments Found.\"});}return/*#__PURE__*/_jsxs(\"section\",{className:classes.comments,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Comments\"}),!isAddingComment&&/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:startAddCommentHandler,children:\"Add a Comment\"}),isAddingComment&&/*#__PURE__*/_jsx(NewCommentForm,{quoteId:params.quoteId,onAddComment:addedCommentsHandler}),comments]});};export default Comments;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useState","useEffect","useCallback","useParams","classes","NewCommentForm","LoadingSpinner","CommentsList","useHttp","getAllComments","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","loadedComments","data","quoteId","startAddCommentHandler","addedCommentsHandler","comments","length"],"mappings":"qKAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,OAASC,cAAT,KAA+B,YAA/B,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,cAA8CV,QAAQ,CAAC,KAAD,CAAtD,wCAAOW,eAAP,eAAwBC,kBAAxB,eACA,GAAMC,CAAAA,MAAM,CAAGV,SAAS,EAAxB,CACA,aAAsDK,OAAO,CAACC,cAAD,CAA7D,CAAQK,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CAAmCC,cAAnC,UAA6BC,IAA7B,CAEA,GAAMC,CAAAA,OAAO,CAAGL,MAAM,CAACK,OAAvB,CAEAjB,SAAS,CAAC,UAAM,CACda,WAAW,CAACI,OAAD,CAAX,CACD,CAFQ,CAEN,CAACA,OAAD,CAAUJ,WAAV,CAFM,CAAT,CAIA,GAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnCP,kBAAkB,CAAC,IAAD,CAAlB,CACD,CAFD,CAIA,GAAMQ,CAAAA,oBAAoB,CAAGlB,WAAW,CAAC,UAAM,CAC7CY,WAAW,CAACI,OAAD,CAAX,CACD,CAFuC,CAErC,CAACA,OAAD,CAAUJ,WAAV,CAFqC,CAAxC,CAIA,GAAIO,CAAAA,QAAJ,CACA,GAAIN,MAAM,GAAK,SAAf,CAA0B,CACxBM,QAAQ,cACN,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CACD,GAAIN,MAAM,GAAK,WAAf,CAA4B,CAC1BM,QAAQ,cAAG,KAAC,YAAD,EAAc,QAAQ,CAAEL,cAAxB,EAAX,CACD,CACD,GACED,MAAM,GAAK,WAAX,GACC,CAACC,cAAD,EAAmBA,cAAc,CAACM,MAAf,GAA0B,CAD9C,CADF,CAGE,CACAD,QAAQ,cAAG,UAAG,SAAS,CAAC,UAAb,gCAAX,CACD,CAED,mBACE,iBAAS,SAAS,CAAEjB,OAAO,CAACiB,QAA5B,wBACE,qCADF,CAEG,CAACV,eAAD,eACC,eAAQ,SAAS,CAAC,KAAlB,CAAwB,OAAO,CAAEQ,sBAAjC,2BAHJ,CAOGR,eAAe,eACd,KAAC,cAAD,EACE,OAAO,CAAEE,MAAM,CAACK,OADlB,CAEE,YAAY,CAAEE,oBAFhB,EARJ,CAaGC,QAbH,GADF,CAiBD,CAtDD,CAwDA,cAAeX,CAAAA,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport useHttp from \"../../components/hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const quoteId = params.quoteId;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"completed\") {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comments Found.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddComment={addedCommentsHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}