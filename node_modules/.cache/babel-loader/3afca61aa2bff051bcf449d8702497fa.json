{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState, useCallback } from 'react';\nimport { useParams, Route, NavLink, useRouteMatch, useHistory } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport DeleteQuote from '../components/quotes/DeleteQuote';\nimport useHttp from '../components/hooks/use-http';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { getSingleQuote } from '../components/lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(loadedQuote);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote.quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  const deletionHandler = () => {\n    console.log('delete ' + loadedQuote.id);\n    setIsLoading(true);\n    DeleteQuote(loadedQuote.id);\n    setIsLoading(false);\n    history.replace('/quotes');\n  }; // console.log(props.quotes);\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.quote,\n      author: loadedQuote.author,\n      id: loadedQuote.id,\n      deletionHandler: deletionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments/`,\n      children: [/*#__PURE__*/_jsxDEV(Comments, {\n        quote: loadedQuote,\n        onAddComment: addedCommentsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"btn--flat\",\n          to: `${match.url}`,\n          children: \"Hide Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"IDwxJka6WRRQT03OjeZRScR8IPs=\", false, function () {\n  return [useHistory, useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["Fragment","useEffect","useState","useCallback","useParams","Route","NavLink","useRouteMatch","useHistory","Comments","HighlightedQuote","DeleteQuote","useHttp","LoadingSpinner","getSingleQuote","QuoteDetails","props","isLoading","setIsLoading","history","match","params","quoteId","sendRequest","status","data","loadedQuote","error","addedCommentsHandler","console","log","quote","deletionHandler","id","replace","author","path","url"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState, useCallback } from 'react';\nimport {\n  useParams,\n  Route,\n  NavLink,\n  useRouteMatch,\n  useHistory,\n} from 'react-router-dom';\n\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport DeleteQuote from '../components/quotes/DeleteQuote';\nimport useHttp from '../components/hooks/use-http';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { getSingleQuote } from '../components/lib/api';\n\nconst QuoteDetails = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  console.log(loadedQuote);\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.quote) {\n    return <p>No Quote Found</p>;\n  }\n\n  const deletionHandler = () => {\n    console.log('delete ' + loadedQuote.id);\n    setIsLoading(true);\n    DeleteQuote(loadedQuote.id);\n    setIsLoading(false);\n    history.replace('/quotes');\n  };\n\n  // console.log(props.quotes);\n\n  return (\n    <Fragment>\n      {isLoading && <LoadingSpinner />}\n      <HighlightedQuote\n        text={loadedQuote.quote}\n        author={loadedQuote.author}\n        id={loadedQuote.id}\n        deletionHandler={deletionHandler}\n      />\n      <div className=\"centered\">\n        <Route path={match.path} exact>\n          <NavLink className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </NavLink>\n        </Route>\n      </div>\n      <Route path={`${match.path}/comments/`}>\n        <Comments quote={loadedQuote} onAddComment={addedCommentsHandler} />\n        <div className=\"centered\">\n          <NavLink className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </NavLink>\n        </div>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"]},"metadata":{},"sourceType":"module"}