{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/store/quotes-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuotesContext = /*#__PURE__*/React.createContext({\n  quotes: [],\n  refresh: quotes => {}\n});\nexport const QuotesContextProvider = props => {\n  _s();\n\n  const [quotes, setQuotes] = useState(null);\n\n  const getQuotes = newQuotes => {\n    setQuotes(newQuotes);\n  };\n\n  const contextValue = {\n    quotes: quotes,\n    refresh: getQuotes()\n  };\n  return /*#__PURE__*/_jsxDEV(QuotesContext.Consumer, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuotesContextProvider, \"hjCKSoZtJfMNmWCPDkX2VuJhOww=\");\n\n_c = QuotesContextProvider;\nexport default QuotesContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/store/quotes-context.js"],"names":["React","useState","QuotesContext","createContext","quotes","refresh","QuotesContextProvider","props","setQuotes","getQuotes","newQuotes","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACxCC,EAAAA,MAAM,EAAE,EADgC;AAExCC,EAAAA,OAAO,EAAGD,MAAD,IAAY,CAAE;AAFiB,CAApB,CAAtB;AAKA,OAAO,MAAME,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMQ,SAAS,GAAIC,SAAD,IAAe;AAC/BF,IAAAA,SAAS,CAACE,SAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG;AACnBP,IAAAA,MAAM,EAAEA,MADW;AAEnBC,IAAAA,OAAO,EAAEI,SAAS;AAFC,GAArB;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEE,YAA/B;AAAA,cACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBM;;GAAMN,qB;;KAAAA,qB;AAmBb,eAAeJ,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst QuotesContext = React.createContext({\n  quotes: [],\n  refresh: (quotes) => {},\n});\n\nexport const QuotesContextProvider = (props) => {\n  const [quotes, setQuotes] = useState(null);\n\n  const getQuotes = (newQuotes) => {\n    setQuotes(newQuotes);\n  };\n\n  const contextValue = {\n    quotes: quotes,\n    refresh: getQuotes(),\n  };\n\n  return (\n    <QuotesContext.Consumer value={contextValue}>\n      {props.children}\n    </QuotesContext.Consumer>\n  );\n};\n\nexport default QuotesContext;\n"]},"metadata":{},"sourceType":"module"}