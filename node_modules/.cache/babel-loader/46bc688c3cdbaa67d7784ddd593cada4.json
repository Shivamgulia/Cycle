{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport DeleteQuote from './DeleteQuote';\nimport useHttp from '../hooks/use-http';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './HighlightedQuote.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HighlightedQuote = props => {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuote,\n  //   error,\n  // } = useHttp(DeleteQuote, true);\n  // const deleteHandler = () => {\n  //   setIsLoading(true);\n  //   sendRequest(props.id);\n  //   setIsLoading(false);\n  //   history.push('/quotes');\n  // };\n  // if (status === 'pending') {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n  // console.log(loadedQuote);\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n  // if (!loadedQuote.quote) {\n  //   return <p>No Quote Found</p>;\n  // }\n  return /*#__PURE__*/_jsxDEV(\"figure\", {\n    className: classes.quote,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n      children: props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: props.deletionHandler,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HighlightedQuote;\nexport default HighlightedQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"HighlightedQuote\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js"],"names":["useState","useHistory","DeleteQuote","useHttp","LoadingSpinner","classes","HighlightedQuote","props","quote","text","author","button","deletionHandler"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE;AAAQ,IAAA,SAAS,EAAEF,OAAO,CAACG,KAA3B;AAAA,4BAEE;AAAA,gBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAaF,KAAK,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,SAAS,EAAEL,OAAO,CAACM,MAA3B;AAAmC,MAAA,OAAO,EAAEJ,KAAK,CAACK,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7CD;;KAAMN,gB;AA+CN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport DeleteQuote from './DeleteQuote';\nimport useHttp from '../hooks/use-http';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  // const [isLoading, setIsLoading] = useState(false);\n\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuote,\n  //   error,\n  // } = useHttp(DeleteQuote, true);\n\n  // const deleteHandler = () => {\n  //   setIsLoading(true);\n  //   sendRequest(props.id);\n  //   setIsLoading(false);\n  //   history.push('/quotes');\n  // };\n\n  // if (status === 'pending') {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n\n  // console.log(loadedQuote);\n\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n\n  // if (!loadedQuote.quote) {\n  //   return <p>No Quote Found</p>;\n  // }\n\n  return (\n    <figure className={classes.quote}>\n      {/* {isLoading && <LoadingSpinner />} */}\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n      <button className={classes.button} onClick={props.deletionHandler}>\n        Delete\n      </button>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n"]},"metadata":{},"sourceType":"module"}