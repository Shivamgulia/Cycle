{"ast":null,"code":"import{Fragment}from\"react\";import{useEffect}from\"react/cjs/react.development\";import QuoteList from\"../components/quotes/QuoteList\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import NoQuotesFound from\"../components/quotes/NoQuotesFound\";import useHttp from\"../components/hooks/use-http\";// import { getAllQuotes } from \"../components/lib/api\";\nimport{getDeletedQuotes}from\"../components/lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";var AllQuotes=function AllQuotes(props){// const {\n//   sendRequest,\n//   status,\n//   data: loadedQuotes,\n//   error,\n// } = useHttp(getAllQuotes, true);\n// useEffect(() => {\n//   sendRequest();\n// }, [sendRequest]);\n// if (status === \"pending\") {\n//   return (\n//     <div className=\"centered\">\n//       <LoadingSpinner />\n//     </div>\n//   );\n// }\n// if (error) {\n//   return <p className=\"centered\">{error}</p>;\n// }\n// if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n//   return <NoQuotesFound />;\n// }\n// const quotes = props.quotes.filter(quote);\nvar _useHttp=useHttp(getDeletedQuotes,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuotes=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest();},[sendRequest]);if(status===\"pending\"){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}if(status===\"completed\"&&(!loadedQuotes||loadedQuotes.length===0)){return/*#__PURE__*/_jsx(NoQuotesFound,{});}var deleted=[];for(var key in loadedQuotes){deleted.push(loadedQuotes[key].id);}// console.log(deleted);\n// console.log(loadedQuotes);\n// console.log(props.quotes);\nvar print=[];for(var _key in props.quotes){if(!deleted.includes(props.quotes[_key].id,0)){print.push(props.quotes[_key]);}}// console.log(print);\nreturn/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(QuoteList,{quotes:print})});};export default AllQuotes;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["Fragment","useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getDeletedQuotes","AllQuotes","props","sendRequest","status","loadedQuotes","data","error","length","deleted","key","push","id","print","quotes","includes"],"mappings":"AAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,6BAA1B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA;AACA,OAASC,gBAAT,KAAiC,uBAAjC,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,aAKIH,OAAO,CAACC,gBAAD,CAAmB,IAAnB,CALX,CACEG,WADF,UACEA,WADF,CAEEC,MAFF,UAEEA,MAFF,CAGQC,YAHR,UAGEC,IAHF,CAIEC,KAJF,UAIEA,KAJF,CAOAZ,SAAS,CAAC,UAAM,CACdQ,WAAW,GACZ,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,GAAIC,MAAM,GAAK,SAAf,CAA0B,CACxB,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CAED,GAAIG,KAAJ,CAAW,CACT,mBAAO,UAAG,SAAS,CAAC,UAAb,UAAyBA,KAAzB,EAAP,CACD,CAED,GAAIH,MAAM,GAAK,WAAX,GAA2B,CAACC,YAAD,EAAiBA,YAAY,CAACG,MAAb,GAAwB,CAApE,CAAJ,CAA4E,CAC1E,mBAAO,KAAC,aAAD,IAAP,CACD,CAED,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,IAAK,GAAMC,CAAAA,GAAX,GAAkBL,CAAAA,YAAlB,CAAgC,CAC9BI,OAAO,CAACE,IAAR,CAAaN,YAAY,CAACK,GAAD,CAAZ,CAAkBE,EAA/B,EACD,CACD;AACA;AACA;AAEA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAMH,CAAAA,IAAX,GAAkBR,CAAAA,KAAK,CAACY,MAAxB,CAAgC,CAC9B,GAAI,CAACL,OAAO,CAACM,QAAR,CAAiBb,KAAK,CAACY,MAAN,CAAaJ,IAAb,EAAkBE,EAAnC,CAAuC,CAAvC,CAAL,CAAgD,CAC9CC,KAAK,CAACF,IAAN,CAAWT,KAAK,CAACY,MAAN,CAAaJ,IAAb,CAAX,EACD,CACF,CACD;AAEA,mBACE,KAAC,QAAD,wBACE,KAAC,SAAD,EAAW,MAAM,CAAEG,KAAnB,EADF,EADF,CAKD,CA9ED,CAgFA,cAAeZ,CAAAA,SAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../components/hooks/use-http\";\n// import { getAllQuotes } from \"../components/lib/api\";\nimport { getDeletedQuotes } from \"../components/lib/api\";\n\nconst AllQuotes = (props) => {\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n\n  // const quotes = props.quotes.filter(quote);\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getDeletedQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  const deleted = [];\n  for (const key in loadedQuotes) {\n    deleted.push(loadedQuotes[key].id);\n  }\n  // console.log(deleted);\n  // console.log(loadedQuotes);\n  // console.log(props.quotes);\n\n  const print = [];\n  for (const key in props.quotes) {\n    if (!deleted.includes(props.quotes[key].id, 0)) {\n      print.push(props.quotes[key]);\n    }\n  }\n  // console.log(print);\n\n  return (\n    <Fragment>\n      <QuoteList quotes={print} />\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n"]},"metadata":{},"sourceType":"module"}