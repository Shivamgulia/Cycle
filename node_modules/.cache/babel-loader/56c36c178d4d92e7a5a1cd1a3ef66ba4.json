{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/Microsoft/Green Rides/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import jwt_encode from'jwt-encode';import jwt_decode from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";var logoutTimer;var AuthContext=/*#__PURE__*/React.createContext({token:'',isLoggedIn:false,userid:'',email:'',password:'',role:'',cycleid:'',data:{},name:'',login:function login(data,password,token,userid,role,cycle,expirationTime){},logout:function logout(){},addCycle:function addCycle(){}});var calculateRemainingTime=function calculateRemainingTime(expirationTime){var currentTime=new Date().getTime();var adjExpirationTime=new Date(expirationTime).getTime();var remainingDuration=adjExpirationTime-currentTime;return remainingDuration;};var retrieveStoredData=function retrieveStoredData(){var storedPassword=localStorage.getItem('password');if(storedPassword!==null&&storedPassword!==''&&storedPassword!==undefined){try{storedPassword=jwt_decode(localStorage.getItem('password')).value;}catch(error){}}var storedToken=localStorage.getItem('token');var storedExpirationDate=localStorage.getItem('expirationTime');var storedUserId=localStorage.getItem('userid');var storedRole=localStorage.getItem('role');var storedEmail=localStorage.getItem('email');var storedCycle=localStorage.getItem('cycleid');var storedData=localStorage.getItem('data');var storedName=localStorage.getItem('name');var storedBranch=localStorage.getItem('branch');var storedRollno=localStorage.getItem('rollno');var remainingTime=calculateRemainingTime(storedExpirationDate);if(remainingTime<=360){localStorage.removeItem('token');localStorage.removeItem('expirationTime');localStorage.removeItem('userid');localStorage.removeItem('role');localStorage.removeItem('cycleid');localStorage.removeItem('data');localStorage.removeItem('name');localStorage.removeItem('password');localStorage.removeItem('email');localStorage.removeItem('branch');localStorage.removeItem('rollno');return null;}return{token:storedToken,userid:storedUserId,role:storedRole,cycleid:storedCycle,data:storedData,name:storedName,branch:storedBranch,password:storedPassword,email:storedEmail,rollno:storedRollno,duration:remainingTime};};export var AuthContextProvider=function AuthContextProvider(props){var tokenData=retrieveStoredData();var initialToken;var initialUserId;var initialRole;var initialCycle;var initialData;var initialName;var initialBranch;var initialRollno;var initialEmail;var initialPassword;if(tokenData){initialData=tokenData.data;initialToken=tokenData.token;initialUserId=tokenData.userid;initialRole=tokenData.role;initialCycle=tokenData.cycleid;initialPassword=tokenData.password;initialEmail=tokenData.email;initialName=tokenData.name;initialBranch=tokenData.branch;initialRollno=tokenData.rollno;}var _useState=useState(initialData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(initialUserId),_useState4=_slicedToArray(_useState3,2),userid=_useState4[0],setUserId=_useState4[1];var _useState5=useState(initialRole),_useState6=_slicedToArray(_useState5,2),role=_useState6[0],setRole=_useState6[1];var _useState7=useState(initialToken),_useState8=_slicedToArray(_useState7,2),token=_useState8[0],setToken=_useState8[1];var _useState9=useState(initialCycle),_useState10=_slicedToArray(_useState9,2),cycle=_useState10[0],setCycle=_useState10[1];var _useState11=useState(initialPassword),_useState12=_slicedToArray(_useState11,2),password=_useState12[0],setPass=_useState12[1];var _useState13=useState(initialEmail),_useState14=_slicedToArray(_useState13,2),email=_useState14[0],setEmail=_useState14[1];var _useState15=useState(initialName),_useState16=_slicedToArray(_useState15,2),name=_useState16[0],setName=_useState16[1];var _useState17=useState(initialBranch),_useState18=_slicedToArray(_useState17,2),branch=_useState18[0],setBranch=_useState18[1];var _useState19=useState(initialRollno),_useState20=_slicedToArray(_useState19,2),rollno=_useState20[0],setRollno=_useState20[1];var userIsLoggedIn=!!token;var logoutHandler=useCallback(function(){setToken(null);setUserId(null);setRole(null);setCycle(null);setData(null);setName(null);setBranch(null);setPass(null);setEmail(null);setRollno(null);localStorage.removeItem('token');localStorage.removeItem('expirationTime');localStorage.removeItem('userid');localStorage.removeItem('role');localStorage.removeItem('email');localStorage.removeItem('password');localStorage.removeItem('cycleid');localStorage.removeItem('data');localStorage.removeItem('name');localStorage.removeItem('branch');localStorage.removeItem('rollno');localStorage.setItem('userIsLoggedIn',false);if(logoutTimer){clearTimeout(logoutTimer);}},[]);var addCycleHandler=function addCycleHandler(cycl){localStorage.setItem('cycleid',cycl);setCycle(cycl);console.log(cycl+' incycle'+cycle);};var loginHandler=function loginHandler(data,password,token,userid,role,cycle,expirationTime){var remainingTime=calculateRemainingTime(expirationTime);var enc=jwt_encode({value:password},'screte sauce');setData(data);setToken(token);setRole(role);setUserId(userid);setEmail(data.email);setName(data.name);setPass(password);setBranch(data.branch);setRollno(data.rollno);setCycle(cycle);localStorage.setItem('token',token);localStorage.setItem('role',role);localStorage.setItem('userid',userid);localStorage.setItem('cycleid',cycle);localStorage.setItem('name',data.name);localStorage.setItem('branch',data.branch);localStorage.setItem('password',enc);localStorage.setItem('email',data.email);localStorage.setItem('rollno',data.rollno);localStorage.setItem('userIsLoggedIn',true);localStorage.setItem('expirationTime',expirationTime);localStorage.setItem('data',JSON.stringify(data));logoutTimer=setTimeout(logoutHandler,remainingTime);};useEffect(function(){if(tokenData){// console.log(tokenData.duration);\nlogoutTimer=setTimeout(logoutHandler,tokenData.duration);}},[tokenData,logoutHandler]);var contextValue={data:data,token:token,isLoggedIn:userIsLoggedIn,userid:userid,role:role,cycleid:cycle,email:email,password:password,name:name,branch:branch,rollno:rollno,login:loginHandler,logout:logoutHandler,addCycle:addCycleHandler};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:props.children});};export default AuthContext;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Microsoft/Green Rides/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","jwt_encode","jwt_decode","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","email","password","role","cycleid","data","name","login","cycle","expirationTime","logout","addCycle","calculateRemainingTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedPassword","localStorage","getItem","undefined","value","error","storedToken","storedExpirationDate","storedUserId","storedRole","storedEmail","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","initialEmail","initialPassword","setData","setUserId","setRole","setToken","setCycle","setPass","setEmail","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","cycl","console","log","loginHandler","enc","JSON","stringify","setTimeout","contextValue","children"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,2CAEA,GAAIC,CAAAA,WAAJ,CAEA,GAAMC,CAAAA,WAAW,cAAGP,KAAK,CAACQ,aAAN,CAAoB,CACtCC,KAAK,CAAE,EAD+B,CAEtCC,UAAU,CAAE,KAF0B,CAGtCC,MAAM,CAAE,EAH8B,CAItCC,KAAK,CAAE,EAJ+B,CAKtCC,QAAQ,CAAE,EAL4B,CAMtCC,IAAI,CAAE,EANgC,CAOtCC,OAAO,CAAE,EAP6B,CAQtCC,IAAI,CAAE,EARgC,CAStCC,IAAI,CAAE,EATgC,CAUtCC,KAAK,CAAE,eAACF,IAAD,CAAOH,QAAP,CAAiBJ,KAAjB,CAAwBE,MAAxB,CAAgCG,IAAhC,CAAsCK,KAAtC,CAA6CC,cAA7C,CAAgE,CAAE,CAVnC,CAWtCC,MAAM,CAAE,iBAAM,CAAE,CAXsB,CAYtCC,QAAQ,CAAE,mBAAM,CAAE,CAZoB,CAApB,CAApB,CAeA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACH,cAAD,CAAoB,CACjD,GAAMI,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAApB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,GAAIF,CAAAA,IAAJ,CAASL,cAAT,EAAyBM,OAAzB,EAA1B,CAEA,GAAME,CAAAA,iBAAiB,CAAGD,iBAAiB,CAAGH,WAA9C,CAEA,MAAOI,CAAAA,iBAAP,CACD,CAPD,CASA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAIC,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAArB,CACA,GACEF,cAAc,GAAK,IAAnB,EACAA,cAAc,GAAK,EADnB,EAEAA,cAAc,GAAKG,SAHrB,CAIE,CACA,GAAI,CACFH,cAAc,CAAGzB,UAAU,CAAC0B,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAV,CAA6CE,KAA9D,CACD,CAAC,MAAOC,KAAP,CAAc,CAAE,CACnB,CACD,GAAMC,CAAAA,WAAW,CAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,CACA,GAAMK,CAAAA,oBAAoB,CAAGN,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B,CACA,GAAMM,CAAAA,YAAY,CAAGP,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB,CACA,GAAMO,CAAAA,UAAU,CAAGR,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB,CACA,GAAMQ,CAAAA,WAAW,CAAGT,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,CACA,GAAMS,CAAAA,WAAW,CAAGV,YAAY,CAACC,OAAb,CAAqB,SAArB,CAApB,CACA,GAAMU,CAAAA,UAAU,CAAGX,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB,CACA,GAAMW,CAAAA,UAAU,CAAGZ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB,CACA,GAAMY,CAAAA,YAAY,CAAGb,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB,CACA,GAAMa,CAAAA,YAAY,CAAGd,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB,CACA,GAAMc,CAAAA,aAAa,CAAGvB,sBAAsB,CAACc,oBAAD,CAA5C,CAEA,GAAIS,aAAa,EAAI,GAArB,CAA0B,CACxBf,YAAY,CAACgB,UAAb,CAAwB,OAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,gBAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,SAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,UAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,OAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACA,MAAO,KAAP,CACD,CAED,MAAO,CACLtC,KAAK,CAAE2B,WADF,CAELzB,MAAM,CAAE2B,YAFH,CAGLxB,IAAI,CAAEyB,UAHD,CAILxB,OAAO,CAAE0B,WAJJ,CAKLzB,IAAI,CAAE0B,UALD,CAMLzB,IAAI,CAAE0B,UAND,CAOLK,MAAM,CAAEJ,YAPH,CAQL/B,QAAQ,CAAEiB,cARL,CASLlB,KAAK,CAAE4B,WATF,CAULS,MAAM,CAAEJ,YAVH,CAWLK,QAAQ,CAAEJ,aAXL,CAAP,CAaD,CAnDD,CAqDA,MAAO,IAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CAC5C,GAAMC,CAAAA,SAAS,CAAGxB,kBAAkB,EAApC,CAEA,GAAIyB,CAAAA,YAAJ,CACA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,WAAJ,CACA,GAAIC,CAAAA,YAAJ,CACA,GAAIC,CAAAA,WAAJ,CACA,GAAIC,CAAAA,WAAJ,CACA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,YAAJ,CACA,GAAIC,CAAAA,eAAJ,CACA,GAAIV,SAAJ,CAAe,CACbK,WAAW,CAAGL,SAAS,CAACrC,IAAxB,CACAsC,YAAY,CAAGD,SAAS,CAAC5C,KAAzB,CACA8C,aAAa,CAAGF,SAAS,CAAC1C,MAA1B,CACA6C,WAAW,CAAGH,SAAS,CAACvC,IAAxB,CACA2C,YAAY,CAAGJ,SAAS,CAACtC,OAAzB,CACAgD,eAAe,CAAGV,SAAS,CAACxC,QAA5B,CACAiD,YAAY,CAAGT,SAAS,CAACzC,KAAzB,CACA+C,WAAW,CAAGN,SAAS,CAACpC,IAAxB,CACA2C,aAAa,CAAGP,SAAS,CAACL,MAA1B,CACAa,aAAa,CAAGR,SAAS,CAACJ,MAA1B,CACD,CAED,cAAwBhD,QAAQ,CAACyD,WAAD,CAAhC,wCAAO1C,IAAP,eAAagD,OAAb,eACA,eAA4B/D,QAAQ,CAACsD,aAAD,CAApC,yCAAO5C,MAAP,eAAesD,SAAf,eACA,eAAwBhE,QAAQ,CAACuD,WAAD,CAAhC,yCAAO1C,IAAP,eAAaoD,OAAb,eACA,eAA0BjE,QAAQ,CAACqD,YAAD,CAAlC,yCAAO7C,KAAP,eAAc0D,QAAd,eACA,eAA0BlE,QAAQ,CAACwD,YAAD,CAAlC,0CAAOtC,KAAP,gBAAciD,QAAd,gBACA,gBAA4BnE,QAAQ,CAAC8D,eAAD,CAApC,2CAAOlD,QAAP,gBAAiBwD,OAAjB,gBACA,gBAA0BpE,QAAQ,CAAC6D,YAAD,CAAlC,2CAAOlD,KAAP,gBAAc0D,QAAd,gBACA,gBAAwBrE,QAAQ,CAAC0D,WAAD,CAAhC,2CAAO1C,IAAP,gBAAasD,OAAb,gBACA,gBAA4BtE,QAAQ,CAAC2D,aAAD,CAApC,2CAAOZ,MAAP,gBAAewB,SAAf,gBACA,gBAA4BvE,QAAQ,CAAC4D,aAAD,CAApC,2CAAOZ,MAAP,gBAAewB,SAAf,gBAEA,GAAMC,CAAAA,cAAc,CAAG,CAAC,CAACjE,KAAzB,CAEA,GAAMkE,CAAAA,aAAa,CAAGxE,WAAW,CAAC,UAAM,CACtCgE,QAAQ,CAAC,IAAD,CAAR,CACAF,SAAS,CAAC,IAAD,CAAT,CACAC,OAAO,CAAC,IAAD,CAAP,CACAE,QAAQ,CAAC,IAAD,CAAR,CACAJ,OAAO,CAAC,IAAD,CAAP,CACAO,OAAO,CAAC,IAAD,CAAP,CACAC,SAAS,CAAC,IAAD,CAAT,CACAH,OAAO,CAAC,IAAD,CAAP,CACAC,QAAQ,CAAC,IAAD,CAAR,CACAG,SAAS,CAAC,IAAD,CAAT,CACA1C,YAAY,CAACgB,UAAb,CAAwB,OAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,gBAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,OAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,UAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,SAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,MAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACAhB,YAAY,CAACgB,UAAb,CAAwB,QAAxB,EACAhB,YAAY,CAAC6C,OAAb,CAAqB,gBAArB,CAAuC,KAAvC,EAEA,GAAItE,WAAJ,CAAiB,CACfuE,YAAY,CAACvE,WAAD,CAAZ,CACD,CACF,CA3BgC,CA2B9B,EA3B8B,CAAjC,CA4BA,GAAMwE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CAChChD,YAAY,CAAC6C,OAAb,CAAqB,SAArB,CAAgCG,IAAhC,EACAX,QAAQ,CAACW,IAAD,CAAR,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAG,UAAP,CAAoB5D,KAAhC,EACD,CAJD,CAMA,GAAM+D,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CACnBlE,IADmB,CAEnBH,QAFmB,CAGnBJ,KAHmB,CAInBE,MAJmB,CAKnBG,IALmB,CAMnBK,KANmB,CAOnBC,cAPmB,CAQhB,CACH,GAAM0B,CAAAA,aAAa,CAAGvB,sBAAsB,CAACH,cAAD,CAA5C,CACA,GAAM+D,CAAAA,GAAG,CAAG/E,UAAU,CAAC,CAAE8B,KAAK,CAAErB,QAAT,CAAD,CAAsB,cAAtB,CAAtB,CACAmD,OAAO,CAAChD,IAAD,CAAP,CACAmD,QAAQ,CAAC1D,KAAD,CAAR,CACAyD,OAAO,CAACpD,IAAD,CAAP,CACAmD,SAAS,CAACtD,MAAD,CAAT,CACA2D,QAAQ,CAACtD,IAAI,CAACJ,KAAN,CAAR,CACA2D,OAAO,CAACvD,IAAI,CAACC,IAAN,CAAP,CACAoD,OAAO,CAACxD,QAAD,CAAP,CACA2D,SAAS,CAACxD,IAAI,CAACgC,MAAN,CAAT,CACAyB,SAAS,CAACzD,IAAI,CAACiC,MAAN,CAAT,CACAmB,QAAQ,CAACjD,KAAD,CAAR,CACAY,YAAY,CAAC6C,OAAb,CAAqB,OAArB,CAA8BnE,KAA9B,EACAsB,YAAY,CAAC6C,OAAb,CAAqB,MAArB,CAA6B9D,IAA7B,EACAiB,YAAY,CAAC6C,OAAb,CAAqB,QAArB,CAA+BjE,MAA/B,EACAoB,YAAY,CAAC6C,OAAb,CAAqB,SAArB,CAAgCzD,KAAhC,EACAY,YAAY,CAAC6C,OAAb,CAAqB,MAArB,CAA6B5D,IAAI,CAACC,IAAlC,EACAc,YAAY,CAAC6C,OAAb,CAAqB,QAArB,CAA+B5D,IAAI,CAACgC,MAApC,EACAjB,YAAY,CAAC6C,OAAb,CAAqB,UAArB,CAAiCO,GAAjC,EACApD,YAAY,CAAC6C,OAAb,CAAqB,OAArB,CAA8B5D,IAAI,CAACJ,KAAnC,EACAmB,YAAY,CAAC6C,OAAb,CAAqB,QAArB,CAA+B5D,IAAI,CAACiC,MAApC,EACAlB,YAAY,CAAC6C,OAAb,CAAqB,gBAArB,CAAuC,IAAvC,EACA7C,YAAY,CAAC6C,OAAb,CAAqB,gBAArB,CAAuCxD,cAAvC,EACAW,YAAY,CAAC6C,OAAb,CAAqB,MAArB,CAA6BQ,IAAI,CAACC,SAAL,CAAerE,IAAf,CAA7B,EAEAV,WAAW,CAAGgF,UAAU,CAACX,aAAD,CAAgB7B,aAAhB,CAAxB,CACD,CAnCD,CAqCA5C,SAAS,CAAC,UAAM,CACd,GAAImD,SAAJ,CAAe,CACb;AACA/C,WAAW,CAAGgF,UAAU,CAACX,aAAD,CAAgBtB,SAAS,CAACH,QAA1B,CAAxB,CACD,CACF,CALQ,CAKN,CAACG,SAAD,CAAYsB,aAAZ,CALM,CAAT,CAOA,GAAMY,CAAAA,YAAY,CAAG,CACnBvE,IAAI,CAAEA,IADa,CAEnBP,KAAK,CAAEA,KAFY,CAGnBC,UAAU,CAAEgE,cAHO,CAInB/D,MAAM,CAAEA,MAJW,CAKnBG,IAAI,CAAEA,IALa,CAMnBC,OAAO,CAAEI,KANU,CAOnBP,KAAK,CAAEA,KAPY,CAQnBC,QAAQ,CAAEA,QARS,CASnBI,IAAI,CAAEA,IATa,CAUnB+B,MAAM,CAAEA,MAVW,CAWnBC,MAAM,CAAEA,MAXW,CAYnB/B,KAAK,CAAEgE,YAZY,CAanB7D,MAAM,CAAEsD,aAbW,CAcnBrD,QAAQ,CAAEwD,eAdS,CAArB,CAiBA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAES,YAA7B,UACGnC,KAAK,CAACoC,QADT,EADF,CAKD,CA3IM,CA6IP,cAAejF,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport jwt_encode from 'jwt-encode';\nimport jwt_decode from 'jwt-decode';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  email: '',\n  password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, password, token, userid, role, cycle, expirationTime) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  let storedPassword = localStorage.getItem('password');\n  if (\n    storedPassword !== null &&\n    storedPassword !== '' &&\n    storedPassword !== undefined\n  ) {\n    try {\n      storedPassword = jwt_decode(localStorage.getItem('password')).value;\n    } catch (error) {}\n  }\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedEmail = localStorage.getItem('email');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('password');\n    localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    password: storedPassword,\n    email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  let initialEmail;\n  let initialPassword;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialPassword = tokenData.password;\n    initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycl) => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (\n    data,\n    password,\n    token,\n    userid,\n    role,\n    cycle,\n    expirationTime\n  ) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    const enc = jwt_encode({ value: password }, 'screte sauce');\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('password', enc);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}