{"ast":null,"code":"import{Fragment,useEffect}from\"react\";import{useParams,Route,NavLink,useRouteMatch}from\"react-router-dom\";import Comments from\"../components/comments/Comments\";import HighlightedQuote from\"../components/quotes/HighlightedQuote\";import useHttp from\"../components/hooks/use-http\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import{getSingleQuote}from\"../components/lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteDetails=function QuoteDetails(){var match=useRouteMatch();var params=useParams();var quoteId=params.quoteId;var _useHttp=useHttp(getSingleQuote,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuote=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest(quoteId);},[sendRequest,quoteId]);if(status===\"pending\"){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}if(!loadedQuote.text){return/*#__PURE__*/_jsx(\"p\",{children:\"No Quote Found\"});}return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(HighlightedQuote,{text:loadedQuote.text,author:loadedQuote.author}),/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(Route,{path:match.path,exact:true,children:/*#__PURE__*/_jsx(NavLink,{className:\"btn--flat\",to:\"\".concat(match.url,\"/comments\"),children:\"Load Comments\"})})}),/*#__PURE__*/_jsxs(Route,{path:\"\".concat(match.path,\"/comments/\"),children:[/*#__PURE__*/_jsx(Comments,{}),/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(NavLink,{className:\"btn--flat\",to:\"\".concat(match.url),children:\"Hide Comments\"})})]})]});};export default QuoteDetails;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["Fragment","useEffect","useParams","Route","NavLink","useRouteMatch","Comments","HighlightedQuote","useHttp","LoadingSpinner","getSingleQuote","QuoteDetails","match","params","quoteId","sendRequest","status","loadedQuote","data","error","text","author","path","url"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,OAA3B,CAAoCC,aAApC,KAAyD,kBAAzD,CAEA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,KAAK,CAAGP,aAAa,EAA3B,CACA,GAAMQ,CAAAA,MAAM,CAAGX,SAAS,EAAxB,CACA,GAAQY,CAAAA,OAAR,CAAoBD,MAApB,CAAQC,OAAR,CACA,aAKIN,OAAO,CAACE,cAAD,CAAiB,IAAjB,CALX,CACEK,WADF,UACEA,WADF,CAEEC,MAFF,UAEEA,MAFF,CAGQC,WAHR,UAGEC,IAHF,CAIEC,KAJF,UAIEA,KAJF,CAOAlB,SAAS,CAAC,UAAM,CACdc,WAAW,CAACD,OAAD,CAAX,CACD,CAFQ,CAEN,CAACC,WAAD,CAAcD,OAAd,CAFM,CAAT,CAIA,GAAIE,MAAM,GAAK,SAAf,CAA0B,CACxB,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CAED,GAAIG,KAAJ,CAAW,CACT,mBAAO,UAAG,SAAS,CAAC,UAAb,UAAyBA,KAAzB,EAAP,CACD,CAED,GAAI,CAACF,WAAW,CAACG,IAAjB,CAAuB,CACrB,mBAAO,qCAAP,CACD,CAED,mBACE,MAAC,QAAD,yBACE,KAAC,gBAAD,EAAkB,IAAI,CAAEH,WAAW,CAACG,IAApC,CAA0C,MAAM,CAAEH,WAAW,CAACI,MAA9D,EADF,cAEE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,KAAD,EAAO,IAAI,CAAET,KAAK,CAACU,IAAnB,CAAyB,KAAK,KAA9B,uBACE,KAAC,OAAD,EAAS,SAAS,CAAC,WAAnB,CAA+B,EAAE,WAAKV,KAAK,CAACW,GAAX,aAAjC,2BADF,EADF,EAFF,cASE,MAAC,KAAD,EAAO,IAAI,WAAKX,KAAK,CAACU,IAAX,cAAX,wBACE,KAAC,QAAD,IADF,cAEE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,OAAD,EAAS,SAAS,CAAC,WAAnB,CAA+B,EAAE,WAAKV,KAAK,CAACW,GAAX,CAAjC,2BADF,EAFF,GATF,GADF,CAoBD,CAnDD,CAqDA,cAAeZ,CAAAA,YAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, NavLink, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { getSingleQuote } from \"../components/lib/api\";\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <div className=\"centered\">\n        <Route path={match.path} exact>\n          <NavLink className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </NavLink>\n        </Route>\n      </div>\n      <Route path={`${match.path}/comments/`}>\n        <Comments />\n        <div className=\"centered\">\n          <NavLink className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </NavLink>\n        </div>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"]},"metadata":{},"sourceType":"module"}