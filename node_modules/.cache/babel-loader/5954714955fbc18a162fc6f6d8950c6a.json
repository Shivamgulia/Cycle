{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useParams, Route, NavLink, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedquote.text,\n      author: loadedquote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments/`,\n      children: [/*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"btn--flat\",\n          to: `${match.url}`,\n          children: \"Hide Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"t1PEK/87Yc+8MsV+4xcPsAzOxOA=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["Fragment","useParams","Route","NavLink","useRouteMatch","Comments","HighlightedQuote","useHttp","LoadingSpinner","NoQuotesFound","getSingleQuote","useEffect","QuoteDetails","match","params","quoteId","sendRequest","status","data","loadedQuote","error","quote","loadedquote","text","author","path","url"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,aAApC,QAAyD,kBAAzD;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGT,aAAa,EAA3B;AACA,QAAMU,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAcD,MAApB;AACA,QAAM;AACJE,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,WAHF;AAIJC,IAAAA;AAJI,MAKFb,OAAO,CAACG,cAAD,EAAiB,IAAjB,CALX;AAOAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACC,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEC,WAAW,CAACC,IAApC;AAA0C,MAAA,MAAM,EAAED,WAAW,CAACE;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEX,KAAK,CAACY,IAAnB;AAAyB,QAAA,KAAK,MAA9B;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,WAAnB;AAA+B,UAAA,EAAE,EAAG,GAAEZ,KAAK,CAACa,GAAI,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEb,KAAK,CAACY,IAAK,YAA3B;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,WAAnB;AAA+B,UAAA,EAAE,EAAG,GAAEZ,KAAK,CAACa,GAAI,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnDD;;GAAMd,Y;UACUR,a,EACCH,S,EAOXM,O;;;KATAK,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useParams, Route, NavLink, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport { useEffect } from \"react/cjs/react.production.min\";\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!quote) {\n    return <p>No Quote Found</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedquote.text} author={loadedquote.author} />\n      <div className=\"centered\">\n        <Route path={match.path} exact>\n          <NavLink className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </NavLink>\n        </Route>\n      </div>\n      <Route path={`${match.path}/comments/`}>\n        <Comments />\n        <div className=\"centered\">\n          <NavLink className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </NavLink>\n        </div>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"]},"metadata":{},"sourceType":"module"}