{"ast":null,"code":"import{Fragment}from\"react\";import{useHistory,useLocation,useRouteMatch}from\"react-router-dom\";import QuoteItem from\"./QuoteItem\";import classes from\"./QuoteList.module.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var sortQuotes=function sortQuotes(quotes,ascending){return quotes.sort(function(quoteA,quoteB){if(ascending){return quoteA.id>quoteB.id?1:-1;}else{return quoteA.id<quoteB.id?1:-1;}});};var QuoteList=function QuoteList(props){var match=useRouteMatch();var History=useHistory();var Location=useLocation();var queryParams=new URLSearchParams(Location.search);var isSortingAscending=queryParams.get(\"sort\")===\"asc\";var sortedQuotes=sortQuotes(props.quotes,isSortingAscending);var changeSortingHandler=function changeSortingHandler(){History.push(\"\".concat(match.url,\"?sort=\").concat(isSortingAscending?\"desc\":\"asc\"));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.sorting,children:/*#__PURE__*/_jsxs(\"button\",{onClick:changeSortingHandler,children:[\"Sort \",isSortingAscending?\"Descending\":\"Ascending\"]})}),/*#__PURE__*/_jsx(\"ul\",{className:classes.list,children:sortedQuotes.map(function(quote){return/*#__PURE__*/_jsx(QuoteItem,{id:quote.id,author:quote.author,text:quote.text},quote.id);})})]});};export default QuoteList;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","useRouteMatch","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","match","History","Location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","url","sorting","list","map","quote","author","text"],"mappings":"AAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,aAAlC,KAAuD,kBAAvD,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,SAAT,CAAuB,CACxC,MAAOD,CAAAA,MAAM,CAACE,IAAP,CAAY,SAACC,MAAD,CAASC,MAAT,CAAoB,CACrC,GAAIH,SAAJ,CAAe,CACb,MAAOE,CAAAA,MAAM,CAACE,EAAP,CAAYD,MAAM,CAACC,EAAnB,CAAwB,CAAxB,CAA4B,CAAC,CAApC,CACD,CAFD,IAEO,CACL,MAAOF,CAAAA,MAAM,CAACE,EAAP,CAAYD,MAAM,CAACC,EAAnB,CAAwB,CAAxB,CAA4B,CAAC,CAApC,CACD,CACF,CANM,CAAP,CAOD,CARD,CAUA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,KAAK,CAAGZ,aAAa,EAA3B,CACA,GAAMa,CAAAA,OAAO,CAAGf,UAAU,EAA1B,CACA,GAAMgB,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,GAAMgB,CAAAA,WAAW,CAAG,GAAIC,CAAAA,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB,CAEA,GAAMC,CAAAA,kBAAkB,CAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,IAA4B,KAAvD,CAEA,GAAMC,CAAAA,YAAY,CAAGjB,UAAU,CAACQ,KAAK,CAACP,MAAP,CAAec,kBAAf,CAA/B,CAEA,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjCR,OAAO,CAACS,IAAR,WAAgBV,KAAK,CAACW,GAAtB,kBAAkCL,kBAAkB,CAAG,MAAH,CAAY,KAAhE,GACD,CAFD,CAGA,mBACE,MAAC,QAAD,yBACE,YAAK,SAAS,CAAEhB,OAAO,CAACsB,OAAxB,uBACE,gBAAQ,OAAO,CAAEH,oBAAjB,mBACQH,kBAAkB,CAAG,YAAH,CAAkB,WAD5C,GADF,EADF,cAME,WAAI,SAAS,CAAEhB,OAAO,CAACuB,IAAvB,UACGL,YAAY,CAACM,GAAb,CAAiB,SAACC,KAAD,qBAChB,KAAC,SAAD,EAEE,EAAE,CAAEA,KAAK,CAAClB,EAFZ,CAGE,MAAM,CAAEkB,KAAK,CAACC,MAHhB,CAIE,IAAI,CAAED,KAAK,CAACE,IAJd,EACOF,KAAK,CAAClB,EADb,CADgB,EAAjB,CADH,EANF,GADF,CAmBD,CAjCD,CAmCA,cAAeC,CAAAA,SAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const match = useRouteMatch();\n  const History = useHistory();\n  const Location = useLocation();\n\n  const queryParams = new URLSearchParams(Location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    History.push(`${match.url}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}