{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [userid, setUserId] = useState('');\n  const [role, setRole] = useState('');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, userid, role, expirationTime) => {\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"azf6//cR6VQz0B+4lNzDab/MOXE=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","role","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setUserId","setRole","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [userid, setUserId] = useState('');\n  const [role, setRole] = useState('');\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, userid, role, expirationTime) => {\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('expirationTime', expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}