{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/store/Quotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuotesContext = /*#__PURE__*/React.createContext({\n  quotes: [],\n  refresh: quotes => {}\n});\nexport const QuotesContextProvider = props => {\n  _s();\n\n  const [quotes, setQuotes] = useState(null);\n\n  const getQuotes = quotes => {};\n\n  const contextValue = {\n    quotes: quotes,\n    refresh: getQuotes\n  };\n  return /*#__PURE__*/_jsxDEV(QuotesContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuotesContextProvider, \"hjCKSoZtJfMNmWCPDkX2VuJhOww=\");\n\n_c = QuotesContextProvider;\nexport default QuotesContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/store/Quotes.js"],"names":["React","useState","useEffect","useCallback","QuotesContext","createContext","quotes","refresh","QuotesContextProvider","props","setQuotes","getQuotes","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAEA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACxCC,EAAAA,MAAM,EAAE,EADgC;AAExCC,EAAAA,OAAO,EAAGD,MAAD,IAAY,CAAE;AAFiB,CAApB,CAAtB;AAKA,OAAO,MAAME,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMU,SAAS,GAAIL,MAAD,IAAY,CAAE,CAAhC;;AAEA,QAAMM,YAAY,GAAG;AACnBN,IAAAA,MAAM,EAAEA,MADW;AAEnBC,IAAAA,OAAO,EAAEI;AAFU,GAArB;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC,YAA/B;AAAA,cACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfM;;GAAML,qB;;KAAAA,qB;AAiBb,eAAeJ,aAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nconst QuotesContext = React.createContext({\n  quotes: [],\n  refresh: (quotes) => {},\n});\n\nexport const QuotesContextProvider = (props) => {\n  const [quotes, setQuotes] = useState(null);\n\n  const getQuotes = (quotes) => {};\n\n  const contextValue = {\n    quotes: quotes,\n    refresh: getQuotes,\n  };\n\n  return (\n    <QuotesContext.Provider value={contextValue}>\n      {props.children}\n    </QuotesContext.Provider>\n  );\n};\n\nexport default QuotesContext;\n"]},"metadata":{},"sourceType":"module"}