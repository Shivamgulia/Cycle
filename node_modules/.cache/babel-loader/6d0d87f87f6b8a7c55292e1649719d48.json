{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Rent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Scanner from '../components/QrScaner/Scanner';\nimport { rentCycle } from '../components/lib/api';\nimport useHttp from '../components/hooks/use-http';\nimport Button from '../components/UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rent = props => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [done, setDone] = useState(false);\n  const role = '';\n  const [one, setOne] = useState(false);\n  const [two, setTwo] = useState(false);\n  const {\n    sendRequest,\n    status,\n    data: cycle,\n    error\n  } = useHttp(rentCycle, true);\n\n  const rentHandler = () => {\n    console.log(data);\n    sendRequest({\n      data,\n      userid\n    });\n  };\n\n  if (role === 'admin') {\n    setOne(true);\n  }\n\n  if (role === 'guard') {\n    setTwo(true);\n  }\n\n  const ScanComplete = props => {\n    setData(props);\n    setDone(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!one && !two && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!done && /*#__PURE__*/_jsxDEV(Scanner, {\n        scan: ScanComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this), done && /*#__PURE__*/_jsxDEV(Button, {\n        click: rentHandler,\n        children: \"Rent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !one && two && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!done && /*#__PURE__*/_jsxDEV(Scanner, {\n        scan: ScanComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this), done && /*#__PURE__*/_jsxDEV(Button, {\n        click: rentHandler,\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), one && !two && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!done && /*#__PURE__*/_jsxDEV(Scanner, {\n        scan: ScanComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this), done && /*#__PURE__*/_jsxDEV(Button, {\n        click: rentHandler,\n        children: \"Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rent, \"dfRGjhXYWQMz1aSaewePovVwVzM=\", false, function () {\n  return [useHttp];\n});\n\n_c = Rent;\nexport default Rent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rent\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Rent.js"],"names":["useState","Scanner","rentCycle","useHttp","Button","Rent","props","data","setData","done","setDone","role","one","setOne","two","setTwo","sendRequest","status","cycle","error","rentHandler","console","log","userid","ScanComplete"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMW,IAAI,GAAG,EAAb;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBV,IAAAA,IAAI,EAAEW,KAA7B;AAAoCC,IAAAA;AAApC,MAA8ChB,OAAO,CAACD,SAAD,EAAY,IAAZ,CAA3D;;AAEA,QAAMkB,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAS,IAAAA,WAAW,CAAC;AAAET,MAAAA,IAAF;AAAQgB,MAAAA;AAAR,KAAD,CAAX;AACD,GAHD;;AAKA,MAAIZ,IAAI,KAAK,OAAb,EAAsB;AACpBE,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD;;AACD,MAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBI,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD;;AAED,QAAMS,YAAY,GAAIlB,KAAD,IAAW;AAC9BE,IAAAA,OAAO,CAACF,KAAD,CAAP;AACAI,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAIA,sBACE;AAAA,eACG,CAACE,GAAD,IAAQ,CAACE,GAAT,iBACC;AAAA,iBACG,CAACL,IAAD,iBAAS,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEe;AAAf;AAAA;AAAA;AAAA;AAAA,cADZ,EAEGjB,IAAI,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFX,EAGGE,IAAI,iBAAI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEW,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQG,CAACR,GAAD,IAAQE,GAAR,iBACC;AAAA,iBACG,CAACL,IAAD,iBAAS,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEe;AAAf;AAAA;AAAA;AAAA;AAAA,cADZ,EAEGjB,IAAI,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFX,EAGGE,IAAI,iBAAI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEW,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAeGR,GAAG,IAAI,CAACE,GAAR,iBACC;AAAA,iBACG,CAACL,IAAD,iBAAS,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEe;AAAf;AAAA;AAAA;AAAA;AAAA,cADZ,EAEGjB,IAAI,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFX,EAGGE,IAAI,iBAAI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEW,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAjDD;;GAAMf,I;UAMgDF,O;;;KANhDE,I;AAmDN,eAAeA,IAAf","sourcesContent":["import { useState } from 'react';\nimport Scanner from '../components/QrScaner/Scanner';\nimport { rentCycle } from '../components/lib/api';\nimport useHttp from '../components/hooks/use-http';\nimport Button from '../components/UI/Button';\nconst Rent = (props) => {\n  const [data, setData] = useState(null);\n  const [done, setDone] = useState(false);\n  const role = '';\n  const [one, setOne] = useState(false);\n  const [two, setTwo] = useState(false);\n  const { sendRequest, status, data: cycle, error } = useHttp(rentCycle, true);\n\n  const rentHandler = () => {\n    console.log(data);\n    sendRequest({ data, userid });\n  };\n\n  if (role === 'admin') {\n    setOne(true);\n  }\n  if (role === 'guard') {\n    setTwo(true);\n  }\n\n  const ScanComplete = (props) => {\n    setData(props);\n    setDone(true);\n  };\n  return (\n    <div>\n      {!one && !two && (\n        <div>\n          {!done && <Scanner scan={ScanComplete} />}\n          {data && <p>{data}</p>}\n          {done && <Button click={rentHandler}>Rent</Button>}\n        </div>\n      )}\n      {!one && two && (\n        <div>\n          {!done && <Scanner scan={ScanComplete} />}\n          {data && <p>{data}</p>}\n          {done && <Button click={rentHandler}>Return</Button>}\n        </div>\n      )}\n      {one && !two && (\n        <div>\n          {!done && <Scanner scan={ScanComplete} />}\n          {data && <p>{data}</p>}\n          {done && <Button click={rentHandler}>Admin</Button>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Rent;\n"]},"metadata":{},"sourceType":"module"}