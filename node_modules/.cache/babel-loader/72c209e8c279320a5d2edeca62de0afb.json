{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../components/hooks/use-http\"; // import { getAllQuotes } from \"../components/lib/api\";\n\nimport { getDeletedQuotes } from \"../components/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = props => {\n  _s();\n\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n  // const quotes = props.quotes.filter(quote);\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getDeletedQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  const deleted = [];\n\n  for (const key in loadedQuotes) {\n    deleted.push(loadedQuotes[key].id);\n  }\n\n  console.log(deleted);\n  const print = props.quotes.filter(quote => deleted.constains(quote.id));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: props.quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuotes, \"SfSVcpc0ZadyNGuM4WkoEDcFW3Q=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["Fragment","useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getDeletedQuotes","AllQuotes","props","sendRequest","status","data","loadedQuotes","error","length","deleted","key","push","id","console","log","print","quotes","filter","quote","constains"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAIJC,IAAAA;AAJI,MAKFR,OAAO,CAACC,gBAAD,EAAmB,IAAnB,CALX;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AAC1E,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,MAAMC,GAAX,IAAkBJ,YAAlB,EAAgC;AAC9BG,IAAAA,OAAO,CAACE,IAAR,CAAaL,YAAY,CAACI,GAAD,CAAZ,CAAkBE,EAA/B;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,QAAMM,KAAK,GAAGb,KAAK,CAACc,MAAN,CAAaC,MAAb,CAAqBC,KAAD,IAAWT,OAAO,CAACU,SAAR,CAAkBD,KAAK,CAACN,EAAxB,CAA/B,CAAd;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEV,KAAK,CAACc;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtED;;GAAMf,S;UAmCAF,O;;;KAnCAE,S;AAwEN,eAAeA,SAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../components/hooks/use-http\";\n// import { getAllQuotes } from \"../components/lib/api\";\nimport { getDeletedQuotes } from \"../components/lib/api\";\n\nconst AllQuotes = (props) => {\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n\n  // const quotes = props.quotes.filter(quote);\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getDeletedQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  const deleted = [];\n  for (const key in loadedQuotes) {\n    deleted.push(loadedQuotes[key].id);\n  }\n  console.log(deleted);\n\n  const print = props.quotes.filter((quote) => deleted.constains(quote.id));\n\n  return (\n    <Fragment>\n      <QuoteList quotes={props.quotes} />\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n"]},"metadata":{},"sourceType":"module"}