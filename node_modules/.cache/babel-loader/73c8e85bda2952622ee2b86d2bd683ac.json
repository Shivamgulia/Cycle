{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS Final/Green Rides/src/components/auth/AddStudentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useHistory } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './AddStudentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddStudentForm = props => {\n  _s();\n\n  console.log(props);\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n  const history = useHistory();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerified, setIsVerified] = useState(false);\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addStudent, false); // console.log(JSON.stringify(props.user));\n\n  const onChange = () => {\n    setIsVerified(true);\n  };\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  const branch = props.user.email;\n\n  const submitionHandler = event => {\n    event.preventDefault();\n\n    if (isVerified) {\n      setIsLoading(true);\n      sendRequest({\n        student: {\n          name: props.user.name,\n          rollno: '100',\n          branch: 'user',\n          role: 'student',\n          email: props.user.email,\n          password: passwordRef.current.value\n        },\n        token: authCtx.token\n      });\n      setIsLoading(false); // console.log({\n      //   name: nameRef.current.value,\n      //   rollno: rollnoRef.current.value,\n      //   branch: branchRef.current.value,\n      //   email: emailRef.current.value,\n      //   role: 'student',\n      //   password: passwordRef.current.value,\n      // });\n\n      history.replace('/');\n    } else {\n      alert('Verify that you are a human');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Name\",\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Name\",\n          id: \"Name\",\n          required: true,\n          value: props.user.name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"userName\",\n          id: \"userName\",\n          required: true,\n          value: props.user.email,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: toggleShowPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centerd\",\n        children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          sitekey: \"6LcU0VQjAAAAAHdKzj2Ub7RAbfQCf6QXbgOif9Le\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddStudentForm, \"NFxJXCl/8AMR9Riy4OzZaQ+tCS0=\", false, function () {\n  return [useHistory, useHttp];\n});\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS Final/Green Rides/src/components/auth/AddStudentForm.js"],"names":["useContext","useRef","useState","AuthContext","ReCAPTCHA","useHistory","useHttp","addStudent","LoadingSpinner","classes","AddStudentForm","props","console","log","authCtx","passwordRef","history","showPassword","setShowPassword","isLoading","setIsLoading","isVerified","setIsVerified","sendRequest","status","error","onChange","toggleShowPassword","branch","user","email","submitionHandler","event","preventDefault","student","name","rollno","role","password","current","value","token","replace","alert","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useHistory } from 'react-router-dom';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = (props) => {\n  console.log(props);\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n  const history = useHistory();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerified, setIsVerified] = useState(false);\n\n  const { sendRequest, status, error } = useHttp(addStudent, false);\n\n  // console.log(JSON.stringify(props.user));\n\n  const onChange = () => {\n    setIsVerified(true);\n  };\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const branch = props.user.email;\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    if (isVerified) {\n      setIsLoading(true);\n      sendRequest({\n        student: {\n          name: props.user.name,\n          rollno: '100',\n          branch: 'user',\n          role: 'student',\n          email: props.user.email,\n          password: passwordRef.current.value,\n        },\n        token: authCtx.token,\n      });\n      setIsLoading(false);\n      // console.log({\n      //   name: nameRef.current.value,\n      //   rollno: rollnoRef.current.value,\n      //   branch: branchRef.current.value,\n      //   email: emailRef.current.value,\n      //   role: 'student',\n      //   password: passwordRef.current.value,\n      // });\n      history.replace('/');\n    } else {\n      alert('Verify that you are a human');\n    }\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input\n            type=\"Name\"\n            id=\"Name\"\n            required\n            value={props.user.name}\n            readOnly\n          />\n        </div>\n        {/* <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input\n            type=\"rollno\"\n            id=\"rollno\"\n            required\n            value={props.user.email.substring(0, 9)}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Branch</label>\n          <input\n            type=\"branch\"\n            id=\"branch\"\n            required\n            value={props.user.email.substring(5, 7)}\n            readOnly\n          />\n        </div> */}\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"userName\"\n            id=\"userName\"\n            required\n            value={props.user.email}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className=\"centerd\">\n          {/* <Recaptcha\n            sitekey=\"6LfOzVQjAAAAACIJVTM3w4iuAePfdEloNCQvRhj-\"\n            render=\"explicit\"\n            verifyCallback={verifyCallback}\n            onloadCallback={load}\n          /> */}\n          <ReCAPTCHA\n            sitekey=\"6LcU0VQjAAAAAHdKzj2Ub7RAbfQCf6QXbgOif9Le\"\n            onChange={onChange}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}