{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport QuoteList from \"../components/quotes/QuoteList\"; // import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n// import NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n// import useHttp from \"../components/hooks/use-http\";\n// import { getAllQuotes } from \"../components/lib/api\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = props => {\n  _s();\n\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n  const [loadingDeleted, setloadingDeleted] = useState(false);\n  const [httpError, setHttpError] = useState(false);\n  const removed = {};\n\n  const getDeleted = async () => {\n    setloadingDeleted(true);\n    const response = await fetch(\"https://quotes-33a21-default-rtdb.firebaseio.com/deleted.json\");\n\n    if (!response.ok) {\n      throw new Error(\"Somethong Went Wrong\");\n    }\n\n    const deleted = await response.json();\n    removed = { ...deleted\n    }; // console.log(deleted);\n\n    setloadingDeleted(false);\n  };\n\n  useEffect(() => {\n    try {\n      getDeleted();\n    } catch {\n      setloadingDeleted(false);\n      setHttpError(true);\n    }\n\n    if (httpError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Could Not Fetch The data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  }, [getDeleted]); // console.log(removed);\n  // console.log(deleted);\n  // const quotes = props.quotes.filter(quote);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: props.quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuotes, \"UZtoBiy5XD1H2QG2vkkmAGzddFo=\");\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/React js/Routing/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["Fragment","useState","useEffect","QuoteList","AllQuotes","props","loadingDeleted","setloadingDeleted","httpError","setHttpError","removed","getDeleted","response","fetch","ok","Error","deleted","json","quotes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB,C,CACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMS,OAAO,GAAG,EAAhB;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7BJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,CAA5B;;AAIA,QAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,UAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AACAP,IAAAA,OAAO,GAAG,EAAE,GAAGM;AAAL,KAAV,CAX6B,CAY7B;;AAEAT,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAfD;;AAgBAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFS,MAAAA,UAAU;AACX,KAFD,CAEE,MAAM;AACNJ,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACD,QAAID,SAAJ,EAAe;AACb,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GAdQ,EAcN,CAACG,UAAD,CAdM,CAAT,CAhD2B,CA+D3B;AAEA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEN,KAAK,CAACa;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzED;;GAAMd,S;;KAAAA,S;AA2EN,eAAeA,SAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\n// import LoadingSpinner from \"../components/UI/LoadingSpinner\";\n// import NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n// import useHttp from \"../components/hooks/use-http\";\n// import { getAllQuotes } from \"../components/lib/api\";\n\nconst AllQuotes = (props) => {\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedQuotes,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n\n  // if (error) {\n  //   return <p className=\"centered\">{error}</p>;\n  // }\n\n  // if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n  //   return <NoQuotesFound />;\n  // }\n  const [loadingDeleted, setloadingDeleted] = useState(false);\n  const [httpError, setHttpError] = useState(false);\n\n  const removed = {};\n\n  const getDeleted = async () => {\n    setloadingDeleted(true);\n    const response = await fetch(\n      \"https://quotes-33a21-default-rtdb.firebaseio.com/deleted.json\"\n    );\n\n    if (!response.ok) {\n      throw new Error(\"Somethong Went Wrong\");\n    }\n\n    const deleted = await response.json();\n    removed = { ...deleted };\n    // console.log(deleted);\n\n    setloadingDeleted(false);\n  };\n  useEffect(() => {\n    try {\n      getDeleted();\n    } catch {\n      setloadingDeleted(false);\n      setHttpError(true);\n    }\n    if (httpError) {\n      return (\n        <div className=\"centered\">\n          <h1>Could Not Fetch The data</h1>\n        </div>\n      );\n    }\n  }, [getDeleted]);\n  // console.log(removed);\n\n  // console.log(deleted);\n  // const quotes = props.quotes.filter(quote);\n\n  return (\n    <Fragment>\n      <QuoteList quotes={props.quotes} />\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n"]},"metadata":{},"sourceType":"module"}