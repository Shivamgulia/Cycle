{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/Green Riders/JS/cycle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useRef,useState}from'react';import AuthContext from'../../store/auth-context';import useHttp from'../hooks/use-http';import{addStudent}from'../lib/api';import LoadingSpinner from'../UI/LoadingSpinner';import classes from'./AddStudentForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddStudentForm=function AddStudentForm(){var authCtx=useContext(AuthContext);var nameRef=useRef();var rollnoRef=useRef();var branchRef=useRef();var emailRef=useRef();var passwordRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useHttp=useHttp(addStudent,false),sendRequest=_useHttp.sendRequest,status=_useHttp.status,student=_useHttp.data,error=_useHttp.error;var toggleShowPassword=function toggleShowPassword(){if(showPassword)setShowPassword(false);if(!showPassword)setShowPassword(true);};if(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}var submitionHandler=function submitionHandler(event){event.preventDefault();sendRequest({student:{name:nameRef.current.value,rollno:rollnoRef.current.value,branch:branchRef.current.value,role:'student',email:emailRef.current.value,password:passwordRef.current.value},token:authCtx.token});console.log({name:nameRef.current.value,rollno:rollnoRef.current.value,branch:branchRef.current.value,email:emailRef.current.value,role:'student',password:passwordRef.current.value});};return/*#__PURE__*/_jsxs(\"section\",{className:classes.auth,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add Student\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitionHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Name\",children:\"Student Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"Name\",id:\"Name\",required:true,ref:nameRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rollno\",children:\"Student Roll Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"rollno\",id:\"rollno\",required:true,ref:rollnoRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"branch\",children:\"Student Branch\"}),/*#__PURE__*/_jsx(\"input\",{type:\"branch\",id:\"branch\",required:true,ref:branchRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Student Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"userName\",id:\"userName\",required:true,ref:emailRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Student Password\"}),/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',id:\"password\",required:true,ref:passwordRef})]}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:toggleShowPassword}),\" Show Password\",/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/ // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n_jsx(\"button\",{children:\"Add Student\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Sending Request....\"})]})]})]});};export default AddStudentForm;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddStudentForm.js"],"names":["useContext","useRef","useState","AuthContext","useHttp","addStudent","LoadingSpinner","classes","AddStudentForm","authCtx","nameRef","rollnoRef","branchRef","emailRef","passwordRef","showPassword","setShowPassword","isLoading","setIsLoading","sendRequest","status","student","data","error","toggleShowPassword","submitionHandler","event","preventDefault","name","current","value","rollno","branch","role","email","password","token","console","log","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = () => {\n  const authCtx = useContext(AuthContext);\n  const nameRef = useRef();\n  const rollnoRef = useRef();\n  const branchRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    sendRequest,\n    status,\n    data: student,\n    error,\n  } = useHttp(addStudent, false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    sendRequest({\n      student: {\n        name: nameRef.current.value,\n        rollno: rollnoRef.current.value,\n        branch: branchRef.current.value,\n        role: 'student',\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      },\n      token: authCtx.token,\n    });\n    console.log({\n      name: nameRef.current.value,\n      rollno: rollnoRef.current.value,\n      branch: branchRef.current.value,\n      email: emailRef.current.value,\n      role: 'student',\n      password: passwordRef.current.value,\n    });\n  };\n  return (\n    <section className={classes.auth}>\n      {/* <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1> */}\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input type=\"Name\" id=\"Name\" required ref={nameRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input type=\"rollno\" id=\"rollno\" required ref={rollnoRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Student Branch</label>\n          <input type=\"branch\" id=\"branch\" required ref={branchRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Student Email</label>\n          <input type=\"userName\" id=\"userName\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Student Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && (\n            // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n            <button>Add Student</button>\n          )}\n          {isLoading && <p>Sending Request....</p>}\n          {/* <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button> */}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}