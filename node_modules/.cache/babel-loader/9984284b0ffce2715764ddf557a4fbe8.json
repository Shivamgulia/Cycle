{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/Green Riders/JS/cycle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var logoutTimer;var AuthContext=/*#__PURE__*/React.createContext({token:'',isLoggedIn:false,userid:'',// email: '',\n// password: '',\nrole:'',cycleid:'',data:{},name:'',login:function login(data,token,userid,role,cycleid){},logout:function logout(){},addCycle:function addCycle(){}});var calculateRemainingTime=function calculateRemainingTime(expirationTime){var currentTime=new Date().getTime();var adjExpirationTime=new Date(expirationTime).getTime();var remainingDuration=adjExpirationTime-currentTime;return remainingDuration;};var retrieveStoredData=function retrieveStoredData(){var storedToken=localStorage.getItem('token');var storedExpirationDate=localStorage.getItem('expirationTime');var storedUserId=localStorage.getItem('userid');var storedRole=localStorage.getItem('role');// const storedEmail = localStorage.getItem('email');\n// const storedPassword = localStorage.getItem('password');\nvar storedCycle=localStorage.getItem('cycleid');var storedData=localStorage.getItem('data');var storedName=localStorage.getItem('name');var storedBranch=localStorage.getItem('branch');var storedRollno=localStorage.getItem('rollno');var remainingTime=calculateRemainingTime(storedExpirationDate);if(remainingTime<=360){localStorage.removeItem('token');localStorage.removeItem('expirationTime');localStorage.removeItem('userid');localStorage.removeItem('role');localStorage.removeItem('cycleid');localStorage.removeItem('data');localStorage.removeItem('name');// localStorage.removeItem('password');\n// localStorage.removeItem('email');\nlocalStorage.removeItem('branch');localStorage.removeItem('rollno');return null;}return{token:storedToken,userid:storedUserId,role:storedRole,cycleid:storedCycle,data:storedData,name:storedName,branch:storedBranch,// password: storedPassword,\n// email: storedEmail,\nrollno:storedRollno,duration:remainingTime};};export var AuthContextProvider=function AuthContextProvider(props){var tokenData=retrieveStoredData();var initialToken;var initialUserId;var initialRole;var initialCycle;var initialData;var initialName;var initialBranch;var initialRollno;// let initialEmail;\n// let initialPassword;\nif(tokenData){initialData=tokenData.data;initialToken=tokenData.token;initialUserId=tokenData.userid;initialRole=tokenData.role;initialCycle=tokenData.cycleid;// initialPassword = tokenData.password;\n// initialEmail = tokenData.email;\ninitialName=tokenData.name;initialBranch=tokenData.branch;initialRollno=tokenData.rollno;}var _useState=useState(initialData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(initialUserId),_useState4=_slicedToArray(_useState3,2),userid=_useState4[0],setUserId=_useState4[1];var _useState5=useState(initialRole),_useState6=_slicedToArray(_useState5,2),role=_useState6[0],setRole=_useState6[1];var _useState7=useState(initialToken),_useState8=_slicedToArray(_useState7,2),token=_useState8[0],setToken=_useState8[1];var _useState9=useState(initialCycle),_useState10=_slicedToArray(_useState9,2),cycle=_useState10[0],setCycle=_useState10[1];// const [password, setPass] = useState(initialPassword);\n// const [email, setEmail] = useState(initialEmail);\nvar _useState11=useState(initialName),_useState12=_slicedToArray(_useState11,2),name=_useState12[0],setName=_useState12[1];var _useState13=useState(initialBranch),_useState14=_slicedToArray(_useState13,2),branch=_useState14[0],setBranch=_useState14[1];var _useState15=useState(initialRollno),_useState16=_slicedToArray(_useState15,2),rollno=_useState16[0],setRollno=_useState16[1];var userIsLoggedIn=!!token;var logoutHandler=useCallback(function(){setToken(null);setUserId(null);setRole(null);setCycle(null);setData(null);setName(null);setBranch(null);// setPass(null);\n// setEmail(null);\nsetRollno(null);localStorage.removeItem('token');localStorage.removeItem('expirationTime');localStorage.removeItem('userid');localStorage.removeItem('role');// localStorage.removeItem('email');\n// localStorage.removeItem('password');\nlocalStorage.removeItem('cycleid');localStorage.removeItem('data');localStorage.removeItem('name');localStorage.removeItem('branch');localStorage.removeItem('rollno');localStorage.setItem('userIsLoggedIn',false);if(logoutTimer){clearTimeout(logoutTimer);}},[]);var addCycleHandler=function addCycleHandler(cycl){localStorage.setItem('cycleid',cycl);setCycle(cycl);console.log(cycl+' incycle'+cycle);};var loginHandler=function loginHandler(data,// password,\ntoken,userid,role,cycle,expirationTime){var remainingTime=calculateRemainingTime(expirationTime);setData(data);setToken(token);setRole(role);setUserId(userid);// setEmail(data.email);\nsetName(data.name);// setPass(password);\nsetBranch(data.branch);setRollno(data.rollno);setCycle(cycle);localStorage.setItem('token',token);localStorage.setItem('role',role);localStorage.setItem('userid',userid);localStorage.setItem('cycleid',cycle);localStorage.setItem('name',data.name);localStorage.setItem('branch',data.branch);// localStorage.setItem('password', password);\n// localStorage.setItem('email', data.email);\nlocalStorage.setItem('rollno',data.rollno);localStorage.setItem('userIsLoggedIn',true);localStorage.setItem('expirationTime',expirationTime);localStorage.setItem('data',JSON.stringify(data));logoutTimer=setTimeout(logoutHandler,remainingTime);};useEffect(function(){if(tokenData){// console.log(tokenData.duration);\nlogoutTimer=setTimeout(logoutHandler,tokenData.duration);}},[tokenData,logoutHandler]);var contextValue={data:data,token:token,isLoggedIn:userIsLoggedIn,userid:userid,role:role,cycleid:cycle,// email: email,\n// password: password,\nname:name,branch:branch,rollno:rollno,login:loginHandler,logout:logoutHandler,addCycle:addCycleHandler};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:props.children});};export default AuthContext;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","role","cycleid","data","name","login","logout","addCycle","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","setData","setUserId","setRole","setToken","cycle","setCycle","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","cycl","console","log","loginHandler","JSON","stringify","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  // email: '',\n  // password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  // const storedEmail = localStorage.getItem('email');\n  // const storedPassword = localStorage.getItem('password');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    // localStorage.removeItem('password');\n    // localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    // password: storedPassword,\n    // email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  // let initialEmail;\n  // let initialPassword;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    // initialPassword = tokenData.password;\n    // initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  // const [password, setPass] = useState(initialPassword);\n  // const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    // setPass(null);\n    // setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    // localStorage.removeItem('email');\n    // localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycl) => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (\n    data,\n    // password,\n    token,\n    userid,\n    role,\n    cycle,\n    expirationTime\n  ) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    // setEmail(data.email);\n    setName(data.name);\n    // setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    // localStorage.setItem('password', password);\n    // localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    // email: email,\n    // password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}