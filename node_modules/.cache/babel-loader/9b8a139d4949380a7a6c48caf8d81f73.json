{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Rent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Rent = props => {\n  _s();\n\n  const [scan, setScan] = useState(false);\n  const [data, setData] = useState('No result');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: (result, error) => {\n        if (!!result) {\n          setData(result === null || result === void 0 ? void 0 : result.text);\n        }\n\n        if (!!error) {\n          console.info(error);\n        }\n      },\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Rent, \"W1QqCerMehjluF3fUBSxQ5rrpmc=\");\n\n_c = Rent;\nexport default Rent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rent\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Rent.js"],"names":["React","useState","QrReader","Rent","props","scan","setScan","data","setData","result","error","text","console","info","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,WAAD,CAAhC;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,CAACQ,MAAD,EAASC,KAAT,KAAmB;AAC3B,YAAI,CAAC,CAACD,MAAN,EAAc;AACZD,UAAAA,OAAO,CAACC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,IAAT,CAAP;AACD;;AAED,YAAI,CAAC,CAACD,KAAN,EAAa;AACXE,UAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACD;AACF,OATH;AAUE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT;AAVT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA,gBAAIP;AAAJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD,CArBD;;GAAMJ,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { QrReader } from 'react-qr-reader';\n\nconst Rent = (props) => {\n  const [scan, setScan] = useState(false);\n  const [data, setData] = useState('No result');\n\n  return (\n    <>\n      <QrReader\n        onResult={(result, error) => {\n          if (!!result) {\n            setData(result?.text);\n          }\n\n          if (!!error) {\n            console.info(error);\n          }\n        }}\n        style={{ width: '100%' }}\n      />\n      <p>{data}</p>\n    </>\n  );\n};\n\nexport default Rent;\n"]},"metadata":{},"sourceType":"module"}