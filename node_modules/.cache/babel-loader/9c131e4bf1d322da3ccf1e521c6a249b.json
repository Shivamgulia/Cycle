{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport jwt_encode from 'jwt-encode';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  email: '',\n  password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, password, token, userid, role, cycle, expirationTime) => {},\n  logout: () => {},\n  addCycle: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedEmail = localStorage.getItem('email');\n  const dec = jwt_decode(localStorage.getItem('password')).value;\n  const storedPassword = dec;\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('password');\n    localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    password: storedPassword,\n    email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredData();\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  let initialEmail;\n  let initialPassword;\n\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialPassword = tokenData.password;\n    initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const addCycleHandler = cycl => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (data, password, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    const enc = jwt_encode({\n      value: password\n    }, 'screte sauce');\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('password', enc);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"AvjPptQtOMj6mQVFGf6z66anYf0=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","jwt_encode","jwt_decode","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","email","password","role","cycleid","data","name","login","cycle","expirationTime","logout","addCycle","calculateRemainingTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedEmail","dec","value","storedPassword","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","initialEmail","initialPassword","setData","setUserId","setRole","setToken","setCycle","setPass","setEmail","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","cycl","console","log","loginHandler","enc","JSON","stringify","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,MAAM,EAAE,EAH8B;AAItCC,EAAAA,KAAK,EAAE,EAJ+B;AAKtCC,EAAAA,QAAQ,EAAE,EAL4B;AAMtCC,EAAAA,IAAI,EAAE,EANgC;AAOtCC,EAAAA,OAAO,EAAE,EAP6B;AAQtCC,EAAAA,IAAI,EAAE,EARgC;AAStCC,EAAAA,IAAI,EAAE,EATgC;AAUtCC,EAAAA,KAAK,EAAE,CAACF,IAAD,EAAOH,QAAP,EAAiBJ,KAAjB,EAAwBE,MAAxB,EAAgCG,IAAhC,EAAsCK,KAAtC,EAA6CC,cAA7C,KAAgE,CAAE,CAVnC;AAWtCC,EAAAA,MAAM,EAAE,MAAM,CAAE,CAXsB;AAYtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAZoB,CAApB,CAApB;;AAeA,MAAMC,sBAAsB,GAAIH,cAAD,IAAoB;AACjD,QAAMI,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASL,cAAT,EAAyBM,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AAEA,SAAOI,iBAAP;AACD,CAPD;;AASA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AACA,QAAME,YAAY,GAAGH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;AACA,QAAMG,UAAU,GAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,QAAMI,WAAW,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMK,GAAG,GAAGhC,UAAU,CAAC0B,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAV,CAA6CM,KAAzD;AACA,QAAMC,cAAc,GAAGF,GAAvB;AACA,QAAMG,WAAW,GAAGT,YAAY,CAACC,OAAb,CAAqB,SAArB,CAApB;AACA,QAAMS,UAAU,GAAGV,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,QAAMU,UAAU,GAAGX,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,QAAMW,YAAY,GAAGZ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;AACA,QAAMY,YAAY,GAAGb,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;AACA,QAAMa,aAAa,GAAGtB,sBAAsB,CAACU,oBAAD,CAA5C;;AAEA,MAAIY,aAAa,IAAI,GAArB,EAA0B;AACxBd,IAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,gBAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,SAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,UAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACA,WAAO,IAAP;AACD;;AAED,SAAO;AACLrC,IAAAA,KAAK,EAAEqB,WADF;AAELnB,IAAAA,MAAM,EAAEuB,YAFH;AAGLpB,IAAAA,IAAI,EAAEqB,UAHD;AAILpB,IAAAA,OAAO,EAAEyB,WAJJ;AAKLxB,IAAAA,IAAI,EAAEyB,UALD;AAMLxB,IAAAA,IAAI,EAAEyB,UAND;AAOLK,IAAAA,MAAM,EAAEJ,YAPH;AAQL9B,IAAAA,QAAQ,EAAE0B,cARL;AASL3B,IAAAA,KAAK,EAAEwB,WATF;AAULY,IAAAA,MAAM,EAAEJ,YAVH;AAWLK,IAAAA,QAAQ,EAAEJ;AAXL,GAAP;AAaD,CA3CD;;AA6CA,OAAO,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,SAAS,GAAGvB,kBAAkB,EAApC;AAEA,MAAIwB,YAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,eAAJ;;AACA,MAAIV,SAAJ,EAAe;AACbK,IAAAA,WAAW,GAAGL,SAAS,CAACpC,IAAxB;AACAqC,IAAAA,YAAY,GAAGD,SAAS,CAAC3C,KAAzB;AACA6C,IAAAA,aAAa,GAAGF,SAAS,CAACzC,MAA1B;AACA4C,IAAAA,WAAW,GAAGH,SAAS,CAACtC,IAAxB;AACA0C,IAAAA,YAAY,GAAGJ,SAAS,CAACrC,OAAzB;AACA+C,IAAAA,eAAe,GAAGV,SAAS,CAACvC,QAA5B;AACAgD,IAAAA,YAAY,GAAGT,SAAS,CAACxC,KAAzB;AACA8C,IAAAA,WAAW,GAAGN,SAAS,CAACnC,IAAxB;AACA0C,IAAAA,aAAa,GAAGP,SAAS,CAACL,MAA1B;AACAa,IAAAA,aAAa,GAAGR,SAAS,CAACJ,MAA1B;AACD;;AAED,QAAM,CAAChC,IAAD,EAAO+C,OAAP,IAAkB9D,QAAQ,CAACwD,WAAD,CAAhC;AACA,QAAM,CAAC9C,MAAD,EAASqD,SAAT,IAAsB/D,QAAQ,CAACqD,aAAD,CAApC;AACA,QAAM,CAACxC,IAAD,EAAOmD,OAAP,IAAkBhE,QAAQ,CAACsD,WAAD,CAAhC;AACA,QAAM,CAAC9C,KAAD,EAAQyD,QAAR,IAAoBjE,QAAQ,CAACoD,YAAD,CAAlC;AACA,QAAM,CAAClC,KAAD,EAAQgD,QAAR,IAAoBlE,QAAQ,CAACuD,YAAD,CAAlC;AACA,QAAM,CAAC3C,QAAD,EAAWuD,OAAX,IAAsBnE,QAAQ,CAAC6D,eAAD,CAApC;AACA,QAAM,CAAClD,KAAD,EAAQyD,QAAR,IAAoBpE,QAAQ,CAAC4D,YAAD,CAAlC;AACA,QAAM,CAAC5C,IAAD,EAAOqD,OAAP,IAAkBrE,QAAQ,CAACyD,WAAD,CAAhC;AACA,QAAM,CAACX,MAAD,EAASwB,SAAT,IAAsBtE,QAAQ,CAAC0D,aAAD,CAApC;AACA,QAAM,CAACX,MAAD,EAASwB,SAAT,IAAsBvE,QAAQ,CAAC2D,aAAD,CAApC;AAEA,QAAMa,cAAc,GAAG,CAAC,CAAChE,KAAzB;AAEA,QAAMiE,aAAa,GAAGvE,WAAW,CAAC,MAAM;AACtC+D,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAO,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAG,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAzC,IAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,gBAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,UAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,SAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,QAAxB;AACAf,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,gBAArB,EAAuC,KAAvC;;AAEA,QAAIrE,WAAJ,EAAiB;AACfsE,MAAAA,YAAY,CAACtE,WAAD,CAAZ;AACD;AACF,GA3BgC,EA2B9B,EA3B8B,CAAjC;;AA4BA,QAAMuE,eAAe,GAAIC,IAAD,IAAU;AAChC/C,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,SAArB,EAAgCG,IAAhC;AACAX,IAAAA,QAAQ,CAACW,IAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,GAAG,UAAP,GAAoB3D,KAAhC;AACD,GAJD;;AAMA,QAAM8D,YAAY,GAAG,CACnBjE,IADmB,EAEnBH,QAFmB,EAGnBJ,KAHmB,EAInBE,MAJmB,EAKnBG,IALmB,EAMnBK,KANmB,EAOnBC,cAPmB,KAQhB;AACH,UAAMyB,aAAa,GAAGtB,sBAAsB,CAACH,cAAD,CAA5C;AACA,UAAM8D,GAAG,GAAG9E,UAAU,CAAC;AAAEkC,MAAAA,KAAK,EAAEzB;AAAT,KAAD,EAAsB,cAAtB,CAAtB;AACAkD,IAAAA,OAAO,CAAC/C,IAAD,CAAP;AACAkD,IAAAA,QAAQ,CAACzD,KAAD,CAAR;AACAwD,IAAAA,OAAO,CAACnD,IAAD,CAAP;AACAkD,IAAAA,SAAS,CAACrD,MAAD,CAAT;AACA0D,IAAAA,QAAQ,CAACrD,IAAI,CAACJ,KAAN,CAAR;AACA0D,IAAAA,OAAO,CAACtD,IAAI,CAACC,IAAN,CAAP;AACAmD,IAAAA,OAAO,CAACvD,QAAD,CAAP;AACA0D,IAAAA,SAAS,CAACvD,IAAI,CAAC+B,MAAN,CAAT;AACAyB,IAAAA,SAAS,CAACxD,IAAI,CAACgC,MAAN,CAAT;AACAmB,IAAAA,QAAQ,CAAChD,KAAD,CAAR;AACAY,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,OAArB,EAA8BlE,KAA9B;AACAsB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,MAArB,EAA6B7D,IAA7B;AACAiB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,QAArB,EAA+BhE,MAA/B;AACAoB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,SAArB,EAAgCxD,KAAhC;AACAY,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,MAArB,EAA6B3D,IAAI,CAACC,IAAlC;AACAc,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,QAArB,EAA+B3D,IAAI,CAAC+B,MAApC;AACAhB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,UAArB,EAAiCO,GAAjC;AACAnD,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,OAArB,EAA8B3D,IAAI,CAACJ,KAAnC;AACAmB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,QAArB,EAA+B3D,IAAI,CAACgC,MAApC;AACAjB,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,gBAArB,EAAuC,IAAvC;AACA5C,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,gBAArB,EAAuCvD,cAAvC;AACAW,IAAAA,YAAY,CAAC4C,OAAb,CAAqB,MAArB,EAA6BQ,IAAI,CAACC,SAAL,CAAepE,IAAf,CAA7B;AAEAV,IAAAA,WAAW,GAAG+E,UAAU,CAACX,aAAD,EAAgB7B,aAAhB,CAAxB;AACD,GAnCD;;AAqCA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkD,SAAJ,EAAe;AACb;AACA9C,MAAAA,WAAW,GAAG+E,UAAU,CAACX,aAAD,EAAgBtB,SAAS,CAACH,QAA1B,CAAxB;AACD;AACF,GALQ,EAKN,CAACG,SAAD,EAAYsB,aAAZ,CALM,CAAT;AAOA,QAAMY,YAAY,GAAG;AACnBtE,IAAAA,IAAI,EAAEA,IADa;AAEnBP,IAAAA,KAAK,EAAEA,KAFY;AAGnBC,IAAAA,UAAU,EAAE+D,cAHO;AAInB9D,IAAAA,MAAM,EAAEA,MAJW;AAKnBG,IAAAA,IAAI,EAAEA,IALa;AAMnBC,IAAAA,OAAO,EAAEI,KANU;AAOnBP,IAAAA,KAAK,EAAEA,KAPY;AAQnBC,IAAAA,QAAQ,EAAEA,QARS;AASnBI,IAAAA,IAAI,EAAEA,IATa;AAUnB8B,IAAAA,MAAM,EAAEA,MAVW;AAWnBC,IAAAA,MAAM,EAAEA,MAXW;AAYnB9B,IAAAA,KAAK,EAAE+D,YAZY;AAanB5D,IAAAA,MAAM,EAAEqD,aAbW;AAcnBpD,IAAAA,QAAQ,EAAEuD;AAdS,GAArB;AAiBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,YAA7B;AAAA,cACGnC,KAAK,CAACoC;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3IM;;GAAMrC,mB;;KAAAA,mB;AA6Ib,eAAe3C,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport jwt_encode from 'jwt-encode';\nimport jwt_decode from 'jwt-decode';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  email: '',\n  password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, password, token, userid, role, cycle, expirationTime) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedEmail = localStorage.getItem('email');\n  const dec = jwt_decode(localStorage.getItem('password')).value;\n  const storedPassword = dec;\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('password');\n    localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    password: storedPassword,\n    email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  let initialEmail;\n  let initialPassword;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialPassword = tokenData.password;\n    initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycl) => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (\n    data,\n    password,\n    token,\n    userid,\n    role,\n    cycle,\n    expirationTime\n  ) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    const enc = jwt_encode({ value: password }, 'screte sauce');\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('password', enc);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}