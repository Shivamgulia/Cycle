{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddStudentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './AddStudentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddStudentForm = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const nameRef = useRef();\n  const rollnoRef = useRef();\n  const branchRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addStudent, false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  const submitionHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    sendRequest({\n      student: {\n        name: nameRef.current.value,\n        rollno: rollnoRef.current.value,\n        branch: branchRef.current.value,\n        role: 'student',\n        email: emailRef.current.value,\n        password: passwordRef.current.value\n      },\n      token: authCtx.token\n    });\n\n    if (error) {\n      alert('Student Added');\n    }\n\n    console.log({\n      name: nameRef.current.value,\n      rollno: rollnoRef.current.value,\n      branch: branchRef.current.value,\n      email: emailRef.current.value,\n      role: 'student',\n      password: passwordRef.current.value\n    });\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Name\",\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Name\",\n          id: \"Name\",\n          required: true,\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rollno\",\n          children: \"Student Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"rollno\",\n          id: \"rollno\",\n          required: true,\n          ref: rollnoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branch\",\n          children: \"Student Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"branch\",\n          id: \"branch\",\n          required: true,\n          ref: branchRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Student Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"userName\",\n          id: \"userName\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Student Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: toggleShowPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading &&\n        /*#__PURE__*/\n        // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n        _jsxDEV(\"button\", {\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddStudentForm, \"y6U2xW9FmJ2K0DigxHjUPmtq1Ww=\", false, function () {\n  return [useHttp];\n});\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddStudentForm.js"],"names":["useContext","useRef","useState","AuthContext","useHttp","addStudent","LoadingSpinner","classes","AddStudentForm","authCtx","nameRef","rollnoRef","branchRef","emailRef","passwordRef","showPassword","setShowPassword","isLoading","setIsLoading","sendRequest","status","error","toggleShowPassword","submitionHandler","event","preventDefault","student","name","current","value","rollno","branch","role","email","password","token","alert","console","log","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = () => {\n  const authCtx = useContext(AuthContext);\n  const nameRef = useRef();\n  const rollnoRef = useRef();\n  const branchRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { sendRequest, status, error } = useHttp(addStudent, false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    sendRequest({\n      student: {\n        name: nameRef.current.value,\n        rollno: rollnoRef.current.value,\n        branch: branchRef.current.value,\n        role: 'student',\n        email: emailRef.current.value,\n        password: passwordRef.current.value,\n      },\n      token: authCtx.token,\n    });\n    if (error) {\n      alert('Student Added');\n    }\n    console.log({\n      name: nameRef.current.value,\n      rollno: rollnoRef.current.value,\n      branch: branchRef.current.value,\n      email: emailRef.current.value,\n      role: 'student',\n      password: passwordRef.current.value,\n    });\n    setIsLoading(false);\n  };\n  return (\n    <section className={classes.auth}>\n      {/* <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1> */}\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input type=\"Name\" id=\"Name\" required ref={nameRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input type=\"rollno\" id=\"rollno\" required ref={rollnoRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Student Branch</label>\n          <input type=\"branch\" id=\"branch\" required ref={branchRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Student Email</label>\n          <input type=\"userName\" id=\"userName\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Student Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && (\n            // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n            <button>Add Student</button>\n          )}\n          {isLoading && <p>Sending Request....</p>}\n          {/* <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button> */}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}