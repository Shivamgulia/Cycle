{"ast":null,"code":"// import { useContext } from 'react';\n// import AuthContext from '../../store/auth-context';\nconst url = 'https://pacific-fortress-54764.herokuapp.com';\nexport async function rentCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n  let userid = data.stdid;\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  if (props.role === 'student' && data.status === 'rented') {\n    throw new Error('Cycle already Rented');\n  }\n\n  if (props.role === 'guard' && data.status === '') {\n    throw new Error('Cycle not Rented Yet');\n  }\n\n  let cycleid;\n  if (props.role === 'student') cycleid = props.cycleid;\n  if (props.role === 'guard') cycleid = '';\n  if (props.role === 'student') userid = props.userid;\n  console.log(`${url}/users/${userid}`);\n  response = await fetch(`${url}/users/${userid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      cycleid\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  let user;\n  if (props.role === 'student') user = props.userid;\n  if (props.role === 'guard') user = '';\n  let stat;\n  if (props.role === 'student') stat = 'rented';\n  if (props.role === 'guard') stat = '';\n  response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      status: stat,\n      stdid: user\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  data = await response.json();\n\n  if (!response.ok) {\n    // console.log(response);\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  console.log('rented');\n  return 'Cycle Rented';\n} //\n\nexport async function addStudent(props) {\n  let response = await fetch(`${url}/users/signup`, {\n    method: 'POST',\n    body: JSON.stringify(props.student),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n} //\n\nexport async function deleteStudent(props) {\n  let response = await fetch(`${url}/users/${props.student.email}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n} //\n\nexport async function addCycle(props) {\n  let response = await fetch(`${url}/cycles/add`, {\n    method: 'POST',\n    body: JSON.stringify(props.cycle),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n}\nexport async function deleteCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n} //\n\nconst checkUser = event => {\n  event.preventDefault();\n  const enteredEmail = emailInputRef.current.value;\n  const enteredPassword = passwordInputRef.current.value;\n  let url;\n  url = 'https://pacific-fortress-54764.herokuapp.com/users/login'; //login send req url\n\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    setIsLoading(false);\n\n    if (res.ok) {\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        let errorMessage = 'Authentication Failed';\n\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      });\n    }\n  }).then(data => {\n    const experationTime = new Date(new Date().getTime() + +36000000); // console.log(data);\n\n    authCtx.login(data, data.token, data._id, data.role, data.cycleid, experationTime.toISOString());\n    history.replace('/');\n  }).catch(err => {\n    alert(err.message);\n  });\n};","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/lib/api.js"],"names":["url","rentCycle","props","response","fetch","cycleid","method","headers","Authorization","token","data","json","userid","stdid","ok","Error","message","role","status","console","log","body","JSON","stringify","user","stat","addStudent","student","deleteStudent","email","addCycle","cycle","deleteCycle","checkUser","event","preventDefault","enteredEmail","emailInputRef","current","value","enteredPassword","passwordInputRef","password","then","res","setIsLoading","errorMessage","error","experationTime","Date","getTime","authCtx","login","_id","toISOString","history","replace","catch","err","alert"],"mappings":"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","sourcesContent":["// import { useContext } from 'react';\n// import AuthContext from '../../store/auth-context';\n\nconst url = 'https://pacific-fortress-54764.herokuapp.com';\n\nexport async function rentCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  let userid = data.stdid;\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  if (props.role === 'student' && data.status === 'rented') {\n    throw new Error('Cycle already Rented');\n  }\n\n  if (props.role === 'guard' && data.status === '') {\n    throw new Error('Cycle not Rented Yet');\n  }\n\n  let cycleid;\n  if (props.role === 'student') cycleid = props.cycleid;\n  if (props.role === 'guard') cycleid = '';\n\n  if (props.role === 'student') userid = props.userid;\n  console.log(`${url}/users/${userid}`);\n  response = await fetch(`${url}/users/${userid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ cycleid }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n\n  data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  let user;\n  if (props.role === 'student') user = props.userid;\n  if (props.role === 'guard') user = '';\n\n  let stat;\n  if (props.role === 'student') stat = 'rented';\n  if (props.role === 'guard') stat = '';\n\n  response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ status: stat, stdid: user }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n\n  data = await response.json();\n\n  if (!response.ok) {\n    // console.log(response);\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  console.log('rented');\n  return 'Cycle Rented';\n}\n\n//\n\nexport async function addStudent(props) {\n  let response = await fetch(`${url}/users/signup`, {\n    method: 'POST',\n    body: JSON.stringify(props.student),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n}\n\n//\n\nexport async function deleteStudent(props) {\n  let response = await fetch(`${url}/users/${props.student.email}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n}\n\n//\n\nexport async function addCycle(props) {\n  let response = await fetch(`${url}/cycles/add`, {\n    method: 'POST',\n    body: JSON.stringify(props.cycle),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n}\n\nexport async function deleteCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  return 'Student Added';\n}\n\n//\n\nconst checkUser = (event) => {\n  event.preventDefault();\n\n  const enteredEmail = emailInputRef.current.value;\n  const enteredPassword = passwordInputRef.current.value;\n\n  let url;\n  url = 'https://pacific-fortress-54764.herokuapp.com/users/login'; //login send req url\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({\n      email: enteredEmail,\n      password: enteredPassword,\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((res) => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          let errorMessage = 'Authentication Failed';\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then((data) => {\n      const experationTime = new Date(new Date().getTime() + +36000000);\n      // console.log(data);\n      authCtx.login(\n        data,\n        data.token,\n        data._id,\n        data.role,\n        data.cycleid,\n        experationTime.toISOString()\n      );\n      history.replace('/');\n    })\n    .catch((err) => {\n      alert(err.message);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}