{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/Green Riders/JS/cycle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from 'react';\n// import { QrReader } from 'react-qr-reader';\n// import classes from './Scanner.module.css';\n// const Scanner = (props) => {\n//   const [scan, setScan] = useState(false);\n//   const startReader = () => {\n//     if (scan) setScan(false);\n//     if (!scan) setScan(true);\n//   };\n//   return (\n//     <div className={classes.camera}>\n//       <div className={classes.action}>\n//         <button type=\"button\" onClick={startReader}>\n//           {scan ? 'Close Camera' : 'Open Camera'}\n//         </button>\n//       </div>\n//       <div className={classes.camera}>\n//         {scan && (\n//           <QrReader\n//             onResult={(result, error) => {\n//               if (!!result) {\n//                 props.scan(result?.text);\n//               }\n//               if (!!error) {\n//                 console.info(error);\n//               }\n//             }}\n//             style={{ width: '100%' }}\n//           />\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Scanner;\nimport{useState,Fragment}from'react';import QRScan from'qrscan';import{jsx as _jsx}from\"react/jsx-runtime\";var Scanner=function Scanner(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),camera=_useState2[0],setCamera=_useState2[1];var openCamera=function openCamera(){setCamera(true);console.log(camera);};var onFind=function onFind(result,error){if(result){props.scan(result);}if(error){alert(error);}};return/*#__PURE__*/_jsx(\"div\",{children:camera?/*#__PURE__*/_jsx(QRScan,{onFind:function onFind(result,error){if(!!result){props.scan(result);}if(!!error){console.info(error);}}}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:openCamera,children:camera?'Close Camera':'Open Camera'})})});};export default Scanner;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/QrScaner/Scanner.js"],"names":["useState","Fragment","QRScan","Scanner","props","camera","setCamera","openCamera","console","log","onFind","result","error","scan","alert","info"],"mappings":"wIAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAASA,QAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,cAA4BJ,QAAQ,CAAC,KAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBD,SAAS,CAAC,IAAD,CAAT,CACAE,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EACD,CAHD,CAKA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,MAAD,CAASC,KAAT,CAAmB,CAChC,GAAID,MAAJ,CAAY,CACVP,KAAK,CAACS,IAAN,CAAWF,MAAX,EACD,CACD,GAAIC,KAAJ,CAAW,CACTE,KAAK,CAACF,KAAD,CAAL,CACD,CACF,CAPD,CAQA,mBACE,qBACGP,MAAM,cACL,KAAC,MAAD,EACE,MAAM,CAAE,gBAACM,MAAD,CAASC,KAAT,CAAmB,CACzB,GAAI,CAAC,CAACD,MAAN,CAAc,CACZP,KAAK,CAACS,IAAN,CAAWF,MAAX,EACD,CAED,GAAI,CAAC,CAACC,KAAN,CAAa,CACXJ,OAAO,CAACO,IAAR,CAAaH,KAAb,EACD,CACF,CATH,EADK,cAaL,kCACE,eAAQ,OAAO,CAAEL,UAAjB,UACGF,MAAM,CAAG,cAAH,CAAoB,aAD7B,EADF,EAdJ,EADF,CAuBD,CAvCD,CAyCA,cAAeF,CAAAA,OAAf","sourcesContent":["// import React, { useState } from 'react';\n// import { QrReader } from 'react-qr-reader';\n\n// import classes from './Scanner.module.css';\n// const Scanner = (props) => {\n//   const [scan, setScan] = useState(false);\n\n//   const startReader = () => {\n//     if (scan) setScan(false);\n//     if (!scan) setScan(true);\n//   };\n\n//   return (\n//     <div className={classes.camera}>\n//       <div className={classes.action}>\n//         <button type=\"button\" onClick={startReader}>\n//           {scan ? 'Close Camera' : 'Open Camera'}\n//         </button>\n//       </div>\n//       <div className={classes.camera}>\n//         {scan && (\n//           <QrReader\n//             onResult={(result, error) => {\n//               if (!!result) {\n//                 props.scan(result?.text);\n//               }\n\n//               if (!!error) {\n//                 console.info(error);\n//               }\n//             }}\n//             style={{ width: '100%' }}\n//           />\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Scanner;\n\nimport { useState, Fragment } from 'react';\n\nimport QRScan from 'qrscan';\n\nconst Scanner = (props) => {\n  const [camera, setCamera] = useState(false);\n\n  const openCamera = () => {\n    setCamera(true);\n    console.log(camera);\n  };\n\n  const onFind = (result, error) => {\n    if (result) {\n      props.scan(result);\n    }\n    if (error) {\n      alert(error);\n    }\n  };\n  return (\n    <div>\n      {camera ? (\n        <QRScan\n          onFind={(result, error) => {\n            if (!!result) {\n              props.scan(result);\n            }\n\n            if (!!error) {\n              console.info(error);\n            }\n          }}\n        />\n      ) : (\n        <div>\n          <button onClick={openCamera}>\n            {camera ? 'Close Camera' : 'Open Camera'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scanner;\n"]},"metadata":{},"sourceType":"module"}