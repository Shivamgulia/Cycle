{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Microsoft/Green Rides/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState } from 'react';\n// import jwt_decode from 'jwt-decode';\n// import AddStudentForm from '../components/auth/AddStudentForm';\n// const Signup = () => {\n//   const [initialSignup, setInitialSignup] = useState(false);\n//   const [user, setUser] = useState({});\n//   useEffect(() => {\n//     /* global google */\n//     google.accounts.id.initialize({\n//       client_id:\n//         '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com',\n//       callback: handleCallbackResponse,\n//     });\n//     google.accounts.id.renderButton(document.getElementById('signupDiv'), {\n//       theme: 'outline',\n//       size: 'large',\n//     });\n//   });\n//   const handleCallbackResponse = (response) => {\n//     var userObject = jwt_decode(response.credential);\n//     document.getElementById('signupDiv').hidden = true;\n//     // console.log(userObject);\n//     if (userObject.email.includes('@hbtu.ac.in')) {\n//       setUser(userObject);\n//       // console.log(user);\n//       setInitialSignup(true);\n//     } else {\n//       alert('Not a HBTU Id');\n//       throw Error('Not a HBTU Id');\n//     }\n//   };\n//   return (\n//     <div>\n//       {!initialSignup && (\n//         <div className=\"centered\">\n//           <div id=\"signupDiv\"></div>\n//         </div>\n//       )}\n//       {initialSignup && (\n//         <div>\n//           <AddStudentForm user={user} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default Signup;\nimport { useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [initialSignup, setInitialSignup] = useState(false);\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: ''\n      });\n    };\n\n    gapi.load('client:auth2', initClient);\n  });\n\n  const handleCallbackResponse = response => {\n    var userObject = jwt_decode(response.credential);\n    document.getElementById('signupDiv').hidden = true; // console.log(userObject);\n\n    if (userObject.email.includes('@hbtu.ac.in')) {\n      setUser(userObject); // console.log(user);\n\n      setInitialSignup(true);\n    } else {\n      alert('Not a HBTU Id');\n      throw Error('Not a HBTU Id');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!initialSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: clientId,\n        buttonText: \"Sign in with Google\",\n        onSuccess: onSuccess,\n        onFailure: onFailure,\n        cookiePolicy: 'single_host_origin',\n        isSignedIn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), initialSignup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddStudentForm, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}; // const Signup = () => {\n//   const clientId =\n//     '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com';\n//   useEffect(() => {\n//     const initClient = () => {\n//       gapi.client.init({\n//         clientId: clientId,\n//         scope: '',\n//       });\n//     };\n//     gapi.load('client:auth2', initClient);\n//   });\n//   const onSuccess = (res) => {\n//     console.log('success:', res);\n//   };\n//   const onFailure = (err) => {\n//     console.log('failed:', err);\n//   };\n//   return (\n//     <GoogleLogin\n//       clientId={clientId}\n//       buttonText=\"Sign in with Google\"\n//       onSuccess={onSuccess}\n//       onFailure={onFailure}\n//       cookiePolicy={'single_host_origin'}\n//       isSignedIn={true}\n//     />\n//   );\n// };\n// export default Signup;\n\n\n_s(Signup, \"6zAqJ9lpPMTFKV+WxkF4j5qijWA=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Microsoft/Green Rides/src/pages/Signup.js"],"names":["useEffect","GoogleLogin","gapi","Signup","initialSignup","setInitialSignup","useState","user","setUser","initClient","client","init","clientId","scope","load","handleCallbackResponse","response","userObject","jwt_decode","credential","document","getElementById","hidden","email","includes","alert","Error","onSuccess","onFailure"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,IAAT,QAAqB,aAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,EAAD,CAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,MAAM;AACvBP,MAAAA,IAAI,CAACQ,MAAL,CAAYC,IAAZ,CAAiB;AACfC,QAAAA,QAAQ,EAAEA,QADK;AAEfC,QAAAA,KAAK,EAAE;AAFQ,OAAjB;AAID,KALD;;AAMAX,IAAAA,IAAI,CAACY,IAAL,CAAU,cAAV,EAA0BL,UAA1B;AACD,GARQ,CAAT;;AAUA,QAAMM,sBAAsB,GAAIC,QAAD,IAAc;AAC3C,QAAIC,UAAU,GAAGC,UAAU,CAACF,QAAQ,CAACG,UAAV,CAA3B;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,MAArC,GAA8C,IAA9C,CAF2C,CAG3C;;AAEA,QAAIL,UAAU,CAACM,KAAX,CAAiBC,QAAjB,CAA0B,aAA1B,CAAJ,EAA8C;AAC5ChB,MAAAA,OAAO,CAACS,UAAD,CAAP,CAD4C,CAE5C;;AAEAZ,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KALD,MAKO;AACLoB,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA,YAAMC,KAAK,CAAC,eAAD,CAAX;AACD;AACF,GAdD;;AAgBA,sBACE;AAAA,eACG,CAACtB,aAAD,iBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEQ,QADZ;AAEE,QAAA,UAAU,EAAC,qBAFb;AAGE,QAAA,SAAS,EAAEe,SAHb;AAIE,QAAA,SAAS,EAAEC,SAJb;AAKE,QAAA,YAAY,EAAE,oBALhB;AAME,QAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAaGxB,aAAa,iBACZ;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnDD,C,CAqDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;GArFMJ,M;;KAAAA,M","sourcesContent":["// import { useEffect, useState } from 'react';\n// import jwt_decode from 'jwt-decode';\n// import AddStudentForm from '../components/auth/AddStudentForm';\n\n// const Signup = () => {\n//   const [initialSignup, setInitialSignup] = useState(false);\n//   const [user, setUser] = useState({});\n\n//   useEffect(() => {\n//     /* global google */\n//     google.accounts.id.initialize({\n//       client_id:\n//         '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com',\n//       callback: handleCallbackResponse,\n//     });\n//     google.accounts.id.renderButton(document.getElementById('signupDiv'), {\n//       theme: 'outline',\n//       size: 'large',\n//     });\n//   });\n//   const handleCallbackResponse = (response) => {\n//     var userObject = jwt_decode(response.credential);\n//     document.getElementById('signupDiv').hidden = true;\n//     // console.log(userObject);\n\n//     if (userObject.email.includes('@hbtu.ac.in')) {\n//       setUser(userObject);\n//       // console.log(user);\n\n//       setInitialSignup(true);\n//     } else {\n//       alert('Not a HBTU Id');\n//       throw Error('Not a HBTU Id');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!initialSignup && (\n//         <div className=\"centered\">\n//           <div id=\"signupDiv\"></div>\n//         </div>\n//       )}\n//       {initialSignup && (\n//         <div>\n//           <AddStudentForm user={user} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\nimport { useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { gapi } from 'gapi-script';\n\nconst Signup = () => {\n  const [initialSignup, setInitialSignup] = useState(false);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: '',\n      });\n    };\n    gapi.load('client:auth2', initClient);\n  });\n\n  const handleCallbackResponse = (response) => {\n    var userObject = jwt_decode(response.credential);\n    document.getElementById('signupDiv').hidden = true;\n    // console.log(userObject);\n\n    if (userObject.email.includes('@hbtu.ac.in')) {\n      setUser(userObject);\n      // console.log(user);\n\n      setInitialSignup(true);\n    } else {\n      alert('Not a HBTU Id');\n      throw Error('Not a HBTU Id');\n    }\n  };\n\n  return (\n    <div>\n      {!initialSignup && (\n        <div className=\"centered\">\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Sign in with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n          />\n        </div>\n      )}\n      {initialSignup && (\n        <div>\n          <AddStudentForm user={user} />\n        </div>\n      )}\n    </div>\n  );\n};\n\n// const Signup = () => {\n//   const clientId =\n//     '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com';\n\n//   useEffect(() => {\n//     const initClient = () => {\n//       gapi.client.init({\n//         clientId: clientId,\n//         scope: '',\n//       });\n//     };\n//     gapi.load('client:auth2', initClient);\n//   });\n//   const onSuccess = (res) => {\n//     console.log('success:', res);\n//   };\n//   const onFailure = (err) => {\n//     console.log('failed:', err);\n//   };\n\n//   return (\n//     <GoogleLogin\n//       clientId={clientId}\n//       buttonText=\"Sign in with Google\"\n//       onSuccess={onSuccess}\n//       onFailure={onFailure}\n//       cookiePolicy={'single_host_origin'}\n//       isSignedIn={true}\n//     />\n//   );\n// };\n\n// export default Signup;\n"]},"metadata":{},"sourceType":"module"}