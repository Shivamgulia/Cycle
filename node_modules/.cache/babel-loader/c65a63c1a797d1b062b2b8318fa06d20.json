{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const authorInputRef = useRef();\n  const quoteInputRef = useRef();\n  const [focusState, setFocusState] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredQuote = quoteInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      quote: enteredQuote\n    });\n  }\n\n  const finishEnteringHandler = () => {\n    setFocusState(false);\n  };\n\n  const formFocusHandler = () => {\n    setFocusState(true);\n    console.log(focusState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: focusState,\n      message: location => 'Are you sure you want to leave this page. All your data will be lost'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"quote\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"quote\",\n            rows: \"5\",\n            ref: quoteInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEnteringHandler,\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"DFj4Y817w/wyyE89HFc/0UO9sIk=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Reactjs/Routing/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["useRef","useState","Fragment","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","authorInputRef","quoteInputRef","focusState","setFocusState","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredQuote","onAddQuote","author","quote","finishEnteringHandler","formFocusHandler","console","log","location","form","isLoading","loading","control","actions"],"mappings":"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","sourcesContent":["import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const quoteInputRef = useRef();\n  const [focusState, setFocusState] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredQuote = quoteInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      quote: enteredQuote,\n    });\n  }\n\n  const finishEnteringHandler = () => {\n    setFocusState(false);\n  };\n\n  const formFocusHandler = () => {\n    setFocusState(true);\n    console.log(focusState);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={focusState}\n        message={(location) =>\n          'Are you sure you want to leave this page. All your data will be lost'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"quote\">Text</label>\n            <textarea id=\"quote\" rows=\"5\" ref={quoteInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}