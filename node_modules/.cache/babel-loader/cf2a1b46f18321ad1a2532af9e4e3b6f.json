{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Cycles.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useContext, useEffect, useState } from 'react';\nimport CycleList from '../components/cycle/CycleList';\nimport useHttp from '../components/hooks/use-http';\nimport { getCycles } from '../components/lib/api';\nimport AuthContext from '../store/auth-context';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cycles = () => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const [getit, setgit] = useState(true);\n  const {\n    sendRequest,\n    status,\n    data: cycles,\n    error\n  } = useHttp(getCycles, false);\n\n  if (getit) {\n    setgit(false);\n    sendRequest({\n      token: authCtx.token\n    });\n  }\n\n  useEffect(() => {\n    sendRequest({\n      token: authCtx.token\n    });\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CycleList, {\n      cycles: cycles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cycles, \"f3BNGa1w+qF2FH127jVZl6owJO4=\", false, function () {\n  return [useHttp];\n});\n\n_c = Cycles;\nexport default Cycles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cycles\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/pages/Cycles.js"],"names":["Fragment","useContext","useEffect","useState","CycleList","useHttp","getCycles","AuthContext","LoadingSpinner","Cycles","authCtx","getit","setgit","sendRequest","status","data","cycles","error","token"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGT,UAAU,CAACM,WAAD,CAA1B;AACA,QAAM,CAACI,KAAD,EAAQC,MAAR,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM;AACJU,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,MAHF;AAIJC,IAAAA;AAJI,MAKFZ,OAAO,CAACC,SAAD,EAAY,KAAZ,CALX;;AAOA,MAAIK,KAAJ,EAAW;AACTC,IAAAA,MAAM,CAAC,KAAD,CAAN;AACAC,IAAAA,WAAW,CAAC;AAAEK,MAAAA,KAAK,EAAER,OAAO,CAACQ;AAAjB,KAAD,CAAX;AACD;;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAC;AAAEK,MAAAA,KAAK,EAAER,OAAO,CAACQ;AAAjB,KAAD,CAAX;AACD,GAFQ,EAEN,CAACL,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;GAAMP,M;UASAJ,O;;;KATAI,M;AAqCN,eAAeA,MAAf","sourcesContent":["import { Fragment, useContext, useEffect, useState } from 'react';\nimport CycleList from '../components/cycle/CycleList';\nimport useHttp from '../components/hooks/use-http';\nimport { getCycles } from '../components/lib/api';\nimport AuthContext from '../store/auth-context';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst Cycles = () => {\n  const authCtx = useContext(AuthContext);\n  const [getit, setgit] = useState(true);\n\n  const {\n    sendRequest,\n    status,\n    data: cycles,\n    error,\n  } = useHttp(getCycles, false);\n\n  if (getit) {\n    setgit(false);\n    sendRequest({ token: authCtx.token });\n  }\n  useEffect(() => {\n    sendRequest({ token: authCtx.token });\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  return (\n    <Fragment>\n      <CycleList cycles={cycles} />\n    </Fragment>\n  );\n};\n\nexport default Cycles;\n"]},"metadata":{},"sourceType":"module"}