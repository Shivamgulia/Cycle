{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/auth/AddStudentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './AddStudentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddStudentForm = props => {\n  _s();\n\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    sendRequest,\n    status,\n    data: student,\n    error\n  } = useHttp(addStudent, false);\n  console.log(JSON.stringify(props.user));\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  const submitionHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    sendRequest({\n      student: {\n        name: props.userObject.given_name + ' ' + props.userObject.family_name,\n        rollno: props.userObject.email.substring(0, 8),\n        branch: props.userObject.email.substring(5, 6),\n        role: 'student',\n        email: props.userObject.email,\n        password: passwordRef.current.value\n      },\n      token: authCtx.token\n    });\n    setIsLoading(false); // console.log({\n    //   name: nameRef.current.value,\n    //   rollno: rollnoRef.current.value,\n    //   branch: branchRef.current.value,\n    //   email: emailRef.current.value,\n    //   role: 'student',\n    //   password: passwordRef.current.value,\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Name\",\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Name\",\n          id: \"Name\",\n          required: true,\n          value: props.userObject.given_name + ' ' + props.userObject.family_name,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rollno\",\n          children: \"Student Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"rollno\",\n          id: \"rollno\",\n          required: true,\n          value: props.userObject.email.substring(0, 8),\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branch\",\n          children: \"Student Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"branch\",\n          id: \"branch\",\n          required: true,\n          value: props.userObject.email.substring(5, 6),\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Student Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"userName\",\n          id: \"userName\",\n          required: true,\n          value: props.userObject.email,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Student Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: toggleShowPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddStudentForm, \"tQmldhsOL/47J8KtzIurmvW1LW4=\", false, function () {\n  return [useHttp];\n});\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/auth/AddStudentForm.js"],"names":["useContext","useRef","useState","AuthContext","useHttp","addStudent","LoadingSpinner","classes","AddStudentForm","props","authCtx","passwordRef","showPassword","setShowPassword","isLoading","setIsLoading","sendRequest","status","data","student","error","console","log","JSON","stringify","user","toggleShowPassword","submitionHandler","event","preventDefault","name","userObject","given_name","family_name","rollno","email","substring","branch","role","password","current","value","token","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = (props) => {\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    sendRequest,\n    status,\n    data: student,\n    error,\n  } = useHttp(addStudent, false);\n\n  console.log(JSON.stringify(props.user));\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    sendRequest({\n      student: {\n        name: props.userObject.given_name + ' ' + props.userObject.family_name,\n        rollno: props.userObject.email.substring(0, 8),\n        branch: props.userObject.email.substring(5, 6),\n        role: 'student',\n        email: props.userObject.email,\n        password: passwordRef.current.value,\n      },\n      token: authCtx.token,\n    });\n    setIsLoading(false);\n    // console.log({\n    //   name: nameRef.current.value,\n    //   rollno: rollnoRef.current.value,\n    //   branch: branchRef.current.value,\n    //   email: emailRef.current.value,\n    //   role: 'student',\n    //   password: passwordRef.current.value,\n    // });\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input\n            type=\"Name\"\n            id=\"Name\"\n            required\n            value={\n              props.userObject.given_name + ' ' + props.userObject.family_name\n            }\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input\n            type=\"rollno\"\n            id=\"rollno\"\n            required\n            value={props.userObject.email.substring(0, 8)}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Student Branch</label>\n          <input\n            type=\"branch\"\n            id=\"branch\"\n            required\n            value={props.userObject.email.substring(5, 6)}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Student Email</label>\n          <input\n            type=\"userName\"\n            id=\"userName\"\n            required\n            value={props.userObject.email}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Student Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}