{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  // email: '',\n  // password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role'); // const storedEmail = localStorage.getItem('email');\n  // const storedPassword = localStorage.getItem('password');\n\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name'); // localStorage.removeItem('password');\n    // localStorage.removeItem('email');\n\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    // password: storedPassword,\n    // email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredData();\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno; // let initialEmail;\n  // let initialPassword;\n\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid; // initialPassword = tokenData.password;\n    // initialEmail = tokenData.email;\n\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const addCycleHandler = cycl => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (data, password, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('password', password);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"AvjPptQtOMj6mQVFGf6z66anYf0=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","role","cycleid","data","name","login","logout","addCycle","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","setData","setUserId","setRole","setToken","cycle","setCycle","password","setPass","initialPassword","email","setEmail","initialEmail","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","cycl","console","log","loginHandler","JSON","stringify","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  // email: '',\n  // password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  // const storedEmail = localStorage.getItem('email');\n  // const storedPassword = localStorage.getItem('password');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    // localStorage.removeItem('password');\n    // localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    // password: storedPassword,\n    // email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  // let initialEmail;\n  // let initialPassword;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    // initialPassword = tokenData.password;\n    // initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycl) => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const loginHandler = (\n    data,\n    password,\n    token,\n    userid,\n    role,\n    cycle,\n    expirationTime\n  ) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('password', password);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}