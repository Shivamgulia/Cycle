{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/QProject/React/QUOTES/src/components/comments/NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useContext } from 'react';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, onAddComment, error]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const EnteredText = commentTextRef.current.value;\n    sendRequest({\n      token: authCtx.token,\n      commentData: {\n        comment: EnteredText,\n        quote_id: props.quoteId\n      }\n    });\n    history.push('/quotes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"kPSPpBhJjonCQYYL/9wEit1IefM=\", false, function () {\n  return [useHistory, useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/QProject/React/QUOTES/src/components/comments/NewCommentForm.js"],"names":["useRef","useEffect","useContext","classes","LoadingSpinner","useHttp","addComment","AuthContext","useHistory","NewCommentForm","props","history","authCtx","commentTextRef","sendRequest","status","error","onAddComment","submitFormHandler","event","preventDefault","EnteredText","current","value","token","commentData","comment","quote_id","quoteId","push","form","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,QAA8C,OAA9C;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAMI,OAAO,GAAGV,UAAU,CAACK,WAAD,CAA1B;AACA,QAAMM,cAAc,GAAGb,MAAM,EAA7B;AACA,QAAM;AAAEc,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAiCX,OAAO,CAACC,UAAD,CAA9C;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAmBP,KAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,MAAM,KAAK,WAAX,IAA0B,CAACC,KAA/B,EAAsC;AACpCC,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACF,MAAD,EAASE,YAAT,EAAuBD,KAAvB,CAJM,CAAT;;AAMA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGR,cAAc,CAACS,OAAf,CAAuBC,KAA3C;AACAT,IAAAA,WAAW,CAAC;AACVU,MAAAA,KAAK,EAAEZ,OAAO,CAACY,KADL;AAEVC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAEL,WADE;AAEXM,QAAAA,QAAQ,EAAEjB,KAAK,CAACkB;AAFL;AAFH,KAAD,CAAX;AAOAjB,IAAAA,OAAO,CAACkB,IAAR,CAAa,SAAb;AACD,GAZD;;AAcA,sBACE;AAAM,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,IAAzB;AAA+B,IAAA,QAAQ,EAAEZ,iBAAzC;AAAA,eACGH,MAAM,KAAK,SAAX,iBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAAC4B,OAAxB;AAAiC,MAAA,QAAQ,EAAEb,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEL;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAK,MAAA,SAAS,EAAEV,OAAO,CAAC6B,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5CD;;GAAMvB,c;UACYD,U,EAGuBH,O;;;KAJnCI,c;AA8CN,eAAeA,cAAf","sourcesContent":["import { useRef, useEffect, useContext } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nconst NewCommentForm = (props) => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, onAddComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const EnteredText = commentTextRef.current.value;\n    sendRequest({\n      token: authCtx.token,\n      commentData: {\n        comment: EnteredText,\n        quote_id: props.quoteId,\n      },\n    });\n    history.push('/quotes');\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}