{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Microsoft/Green Rides/src/pages/Signup.js\",\n    _s = $RefreshSig$();\n\n// import { useEffect, useState } from 'react';\n// import jwt_decode from 'jwt-decode';\n// import AddStudentForm from '../components/auth/AddStudentForm';\n// const Signup = () => {\n//   const [initialSignup, setInitialSignup] = useState(false);\n//   const [user, setUser] = useState({});\n//   useEffect(() => {\n//     /* global google */\n//     google.accounts.id.initialize({\n//       client_id:\n//         '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com',\n//       callback: handleCallbackResponse,\n//     });\n//     google.accounts.id.renderButton(document.getElementById('signupDiv'), {\n//       theme: 'outline',\n//       size: 'large',\n//     });\n//   });\n//   const handleCallbackResponse = (response) => {\n//     var userObject = jwt_decode(response.credential);\n//     document.getElementById('signupDiv').hidden = true;\n//     // console.log(userObject);\n//     if (userObject.email.includes('@hbtu.ac.in')) {\n//       setUser(userObject);\n//       // console.log(user);\n//       setInitialSignup(true);\n//     } else {\n//       alert('Not a HBTU Id');\n//       throw Error('Not a HBTU Id');\n//     }\n//   };\n//   return (\n//     <div>\n//       {!initialSignup && (\n//         <div className=\"centered\">\n//           <div id=\"signupDiv\"></div>\n//         </div>\n//       )}\n//       {initialSignup && (\n//         <div>\n//           <AddStudentForm user={user} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default Signup;\nimport { useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const clientId = '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com';\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: ''\n      });\n    };\n\n    gapi.load('client:auth2', initClient);\n  });\n\n  const onSuccess = res => {\n    console.log('success:', res);\n  };\n\n  const onFailure = err => {\n    console.log('failed:', err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: clientId,\n    buttonText: \"Sign in with Google\",\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Microsoft/Green Rides/src/pages/Signup.js"],"names":["useEffect","GoogleLogin","gapi","Signup","clientId","initClient","client","init","scope","load","onSuccess","res","console","log","onFailure","err"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,IAAT,QAAqB,aAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GACZ,0EADF;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,MAAM;AACvBH,MAAAA,IAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiB;AACfH,QAAAA,QAAQ,EAAEA,QADK;AAEfI,QAAAA,KAAK,EAAE;AAFQ,OAAjB;AAID,KALD;;AAMAN,IAAAA,IAAI,CAACO,IAAL,CAAU,cAAV,EAA0BJ,UAA1B;AACD,GARQ,CAAT;;AASA,QAAMK,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACD,GAFD;;AAGA,QAAMG,SAAS,GAAIC,GAAD,IAAS;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AACD,GAFD;;AAGA,sBACE,QAAC,WAAD;AACE,IAAA,QAAQ,EAAEX,QADZ;AAEE,IAAA,UAAU,EAAC,qBAFb;AAGE,IAAA,SAAS,EAAEM,SAHb;AAIE,IAAA,SAAS,EAAEI,SAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BD;;GAAMX,M;;KAAAA,M","sourcesContent":["// import { useEffect, useState } from 'react';\n// import jwt_decode from 'jwt-decode';\n// import AddStudentForm from '../components/auth/AddStudentForm';\n\n// const Signup = () => {\n//   const [initialSignup, setInitialSignup] = useState(false);\n//   const [user, setUser] = useState({});\n\n//   useEffect(() => {\n//     /* global google */\n//     google.accounts.id.initialize({\n//       client_id:\n//         '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com',\n//       callback: handleCallbackResponse,\n//     });\n//     google.accounts.id.renderButton(document.getElementById('signupDiv'), {\n//       theme: 'outline',\n//       size: 'large',\n//     });\n//   });\n//   const handleCallbackResponse = (response) => {\n//     var userObject = jwt_decode(response.credential);\n//     document.getElementById('signupDiv').hidden = true;\n//     // console.log(userObject);\n\n//     if (userObject.email.includes('@hbtu.ac.in')) {\n//       setUser(userObject);\n//       // console.log(user);\n\n//       setInitialSignup(true);\n//     } else {\n//       alert('Not a HBTU Id');\n//       throw Error('Not a HBTU Id');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!initialSignup && (\n//         <div className=\"centered\">\n//           <div id=\"signupDiv\"></div>\n//         </div>\n//       )}\n//       {initialSignup && (\n//         <div>\n//           <AddStudentForm user={user} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\nimport { useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { gapi } from 'gapi-script';\n\nconst Signup = () => {\n  const clientId =\n    '796516456467-obk13f0j5ajcme475pfl3ioecispqv5a.apps.googleusercontent.com';\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        scope: '',\n      });\n    };\n    gapi.load('client:auth2', initClient);\n  });\n  const onSuccess = (res) => {\n    console.log('success:', res);\n  };\n  const onFailure = (err) => {\n    console.log('failed:', err);\n  };\n  return (\n    <GoogleLogin\n      clientId={clientId}\n      buttonText=\"Sign in with Google\"\n      onSuccess={onSuccess}\n      onFailure={onFailure}\n      cookiePolicy={'single_host_origin'}\n      isSignedIn={true}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}