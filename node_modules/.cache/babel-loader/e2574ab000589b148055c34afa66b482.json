{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddCycle.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Scanner from '../QrScaner/Scanner';\nimport classes from './AddStudentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addCycle } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCycle = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [scanComplete, setScanComplete] = useState(false);\n  const [id, setId] = useState(null);\n  const {\n    sendRequest,\n    status,\n    data: student,\n    error\n  } = useHttp(addCycle, false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const addCycleHandler = data => {\n    setId(data);\n    setScanComplete(true);\n  };\n\n  const submitionHandler = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    console.log(id);\n    setIsLoading(false);\n  };\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Cycle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitionHandler,\n      children: [!scanComplete && /*#__PURE__*/_jsxDEV(Scanner, {\n        scan: addCycleHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), scanComplete && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && scanComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Cycle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 42\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCycle, \"VobZn4jBxKIuxTQQekqgJi0rlRQ=\", false, function () {\n  return [useHttp];\n});\n\n_c = AddCycle;\nexport default AddCycle;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCycle\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddCycle.js"],"names":["useRef","useState","Scanner","classes","useHttp","addCycle","AddCycle","showPassword","setShowPassword","isLoading","setIsLoading","scanComplete","setScanComplete","id","setId","sendRequest","status","data","student","error","toggleShowPassword","addCycleHandler","submitionHandler","event","preventDefault","console","log","auth","actions"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,IAAD,CAA5B;AAEA,QAAM;AACJc,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,OAHF;AAIJC,IAAAA;AAJI,MAKFf,OAAO,CAACC,QAAD,EAAW,KAAX,CALX;;AAOA,QAAMe,kBAAkB,GAAG,MAAM;AAC/B,QAAIb,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AAClB,QAAI,CAACD,YAAL,EAAmBC,eAAe,CAAC,IAAD,CAAf;AACpB,GAHD;;AAKA,QAAMa,eAAe,GAAIJ,IAAD,IAAU;AAChCH,IAAAA,KAAK,CAACG,IAAD,CAAL;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAKA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYb,EAAZ;AACAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GALD;;AAOA,MAAIM,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEhB,OAAO,CAACwB,IAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEL,gBAAhB;AAAA,iBACG,CAACX,YAAD,iBAAiB,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEU;AAAf;AAAA;AAAA;AAAA;AAAA,cADpB,EAEGV,YAAY,iBAAI;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFnB,eAGE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACyB,OAAxB;AAAA,mBACG,CAACnB,SAAD,IAAcE,YAAd,iBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjC,EAEGF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAtDD;;GAAMH,Q;UAWAF,O;;;KAXAE,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import { useRef, useState } from 'react';\n\nimport Scanner from '../QrScaner/Scanner';\nimport classes from './AddStudentForm.module.css';\nimport useHttp from '../hooks/use-http';\nimport { addCycle } from '../lib/api';\n\nconst AddCycle = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [scanComplete, setScanComplete] = useState(false);\n  const [id, setId] = useState(null);\n\n  const {\n    sendRequest,\n    status,\n    data: student,\n    error,\n  } = useHttp(addCycle, false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const addCycleHandler = (data) => {\n    setId(data);\n    setScanComplete(true);\n  };\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    console.log(id);\n    setIsLoading(false);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>Add Cycle</h1>\n      <form onSubmit={submitionHandler}>\n        {!scanComplete && <Scanner scan={addCycleHandler} />}\n        {scanComplete && <h3>{id}</h3>}\n        <div className={classes.actions}>\n          {!isLoading && scanComplete && <button>Add Cycle</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddCycle;\n"]},"metadata":{},"sourceType":"module"}