{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  email: '',\n  password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addPassword: () => {},\n  addCycle: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedEmail = localStorage.getItem('email');\n  const storedPassword = localStorage.getItem('password');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('password');\n    localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    password: storedPassword,\n    email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredData();\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  let initialEmail;\n  let initialPassword;\n\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialPassword = tokenData.password;\n    initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const addCycleHandler = cycl => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n\n  const addPasswordHandler = pass => {\n    // localStorage.setItem('password', pass);\n    // setPass(pass);\n    console.log(localStorage.getItem('password') + password + 'PASS' + pass);\n  };\n\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addPassword: addPasswordHandler,\n    addCycle: addCycleHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"AvjPptQtOMj6mQVFGf6z66anYf0=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","email","password","role","cycleid","data","name","login","logout","addPassword","addCycle","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedEmail","storedPassword","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","initialEmail","initialPassword","setData","setUserId","setRole","setToken","cycle","setCycle","setPass","setEmail","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","cycl","console","log","addPasswordHandler","pass","loginHandler","JSON","stringify","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  email: '',\n  password: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addPassword: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedEmail = localStorage.getItem('email');\n  const storedPassword = localStorage.getItem('password');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('password');\n    localStorage.removeItem('email');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    password: storedPassword,\n    email: storedEmail,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  let initialEmail;\n  let initialPassword;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialPassword = tokenData.password;\n    initialEmail = tokenData.email;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [password, setPass] = useState(initialPassword);\n  const [email, setEmail] = useState(initialEmail);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setPass(null);\n    setEmail(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('email');\n    localStorage.removeItem('password');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycl) => {\n    localStorage.setItem('cycleid', cycl);\n    setCycle(cycl);\n    console.log(cycl + ' incycle' + cycle);\n  };\n  const addPasswordHandler = (pass) => {\n    // localStorage.setItem('password', pass);\n    // setPass(pass);\n    console.log(localStorage.getItem('password') + password + 'PASS' + pass);\n  };\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setEmail(data.email);\n    setName(data.name);\n    setPass(password);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    email: email,\n    password: password,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addPassword: addPasswordHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}