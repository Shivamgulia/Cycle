{"ast":null,"code":"const url = 'https://pacific-fortress-54764.herokuapp.com';\nexport async function rentCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n  let userid = data.stdid;\n  let stdname;\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle');\n  }\n\n  if (props.role === 'student' && data.status === 'rented') {\n    throw new Error('Cycle already Rented');\n  }\n\n  if (props.role === 'guard' && data.status === '') {\n    throw new Error('Cycle not Rented Yet');\n  }\n\n  let cycleid;\n\n  if (props.role === 'student') {\n    cycleid = props.cycleid;\n    stdname = 'shivam';\n  }\n\n  if (props.role === 'guard') {\n    cycleid = '';\n    stdname = '';\n  }\n\n  if (props.role === 'student') userid = props.userid;\n  response = await fetch(`${url}/users/${userid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      cycleid\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  let user;\n  if (props.role === 'student') user = props.userid;\n  if (props.role === 'guard') user = '';\n  let stat;\n  if (props.role === 'student') stat = 'rented';\n  if (props.role === 'guard') stat = '';\n  response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({\n      status: stat,\n      stdid: user\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  data = await response.json();\n\n  if (!response.ok) {\n    // console.log(response);\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  console.log('rented');\n  return 'Cycle Rented';\n} //\n\nexport async function addStudent(props) {\n  let response = await fetch(`${url}/users/signup`, {\n    method: 'POST',\n    body: JSON.stringify(props.student),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Add Student.');\n  }\n\n  return 'Student Added';\n} //\n\nexport async function deleteStudent(props) {\n  let response = await fetch(`${url}/users/${props.student.email}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Delete Student.');\n  }\n\n  return 'Student Deleted';\n} //\n\nexport async function addCycle(props) {\n  let response = await fetch(`${url}/cycles/add`, {\n    method: 'POST',\n    body: JSON.stringify(props.cycle),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Add Cycle.');\n  }\n\n  return 'Student Added';\n}\nexport async function deleteCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Delete Cycle');\n  }\n\n  return 'Cycle Deleted';\n} //\n\nexport async function checkUser(props) {\n  const response = await fetch('https://pacific-fortress-54764.herokuapp.com/users/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      email: props.email,\n      password: props.password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  console.log(data);\n  return data;\n} //\n\nexport async function getCycles(props) {\n  let response = await fetch(`${url}/cycles/all`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token\n    }\n  });\n  let data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch Cycles.');\n  }\n\n  return data;\n}","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Microsoft/cycle/src/components/lib/api.js"],"names":["url","rentCycle","props","response","fetch","cycleid","method","headers","Authorization","token","data","json","userid","stdid","stdname","ok","Error","message","role","status","body","JSON","stringify","user","stat","console","log","addStudent","student","deleteStudent","email","addCycle","cycle","deleteCycle","checkUser","password","getCycles"],"mappings":"AAAA,MAAMA,GAAG,GAAG,8CAAZ;AAEA,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgC;AACrC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,WAAUE,KAAK,CAACG,OAAQ,EAAhC,EAAmC;AAC3DC,IAAAA,MAAM,EAAE,KADmD;AAE3DC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAFkD,GAAnC,CAA1B;AAOA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;AACA,MAAIC,MAAM,GAAGF,IAAI,CAACG,KAAlB;AACA,MAAIC,OAAJ;;AACA,MAAI,CAACX,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,sBAA1B,CAAN;AACD;;AAED,MAAIf,KAAK,CAACgB,IAAN,KAAe,SAAf,IAA4BR,IAAI,CAACS,MAAL,KAAgB,QAAhD,EAA0D;AACxD,UAAM,IAAIH,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,MAAId,KAAK,CAACgB,IAAN,KAAe,OAAf,IAA0BR,IAAI,CAACS,MAAL,KAAgB,EAA9C,EAAkD;AAChD,UAAM,IAAIH,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,MAAIX,OAAJ;;AACA,MAAIH,KAAK,CAACgB,IAAN,KAAe,SAAnB,EAA8B;AAC5Bb,IAAAA,OAAO,GAAGH,KAAK,CAACG,OAAhB;AACAS,IAAAA,OAAO,GAAG,QAAV;AACD;;AACD,MAAIZ,KAAK,CAACgB,IAAN,KAAe,OAAnB,EAA4B;AAC1Bb,IAAAA,OAAO,GAAG,EAAV;AACAS,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIZ,KAAK,CAACgB,IAAN,KAAe,SAAnB,EAA8BN,MAAM,GAAGV,KAAK,CAACU,MAAf;AAC9BT,EAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,UAASY,MAAO,EAAxB,EAA2B;AAC/CN,IAAAA,MAAM,EAAE,OADuC;AAE/Cc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,MAAAA;AAAF,KAAf,CAFyC;AAG/CE,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAHsC,GAA3B,CAAtB;AASAC,EAAAA,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAb;;AAEA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,uBAA1B,CAAN;AACD;;AAED,MAAIM,IAAJ;AACA,MAAIrB,KAAK,CAACgB,IAAN,KAAe,SAAnB,EAA8BK,IAAI,GAAGrB,KAAK,CAACU,MAAb;AAC9B,MAAIV,KAAK,CAACgB,IAAN,KAAe,OAAnB,EAA4BK,IAAI,GAAG,EAAP;AAE5B,MAAIC,IAAJ;AACA,MAAItB,KAAK,CAACgB,IAAN,KAAe,SAAnB,EAA8BM,IAAI,GAAG,QAAP;AAC9B,MAAItB,KAAK,CAACgB,IAAN,KAAe,OAAnB,EAA4BM,IAAI,GAAG,EAAP;AAE5BrB,EAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,WAAUE,KAAK,CAACG,OAAQ,EAAhC,EAAmC;AACvDC,IAAAA,MAAM,EAAE,OAD+C;AAEvDc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,MAAAA,MAAM,EAAEK,IAAV;AAAgBX,MAAAA,KAAK,EAAEU;AAAvB,KAAf,CAFiD;AAGvDhB,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAH8C,GAAnC,CAAtB;AASAC,EAAAA,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAb;;AAEA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB;AACA,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,uBAA1B,CAAN;AACD;;AAEDQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,SAAO,cAAP;AACD,C,CAED;;AAEA,OAAO,eAAeC,UAAf,CAA0BzB,KAA1B,EAAiC;AACtC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,eAAR,EAAwB;AAChDM,IAAAA,MAAM,EAAE,MADwC;AAEhDc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAepB,KAAK,CAAC0B,OAArB,CAF0C;AAGhDrB,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAHuC,GAAxB,CAA1B;AAQA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;;AACA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,wBAA1B,CAAN;AACD;;AAED,SAAO,eAAP;AACD,C,CAED;;AAEA,OAAO,eAAeY,aAAf,CAA6B3B,KAA7B,EAAoC;AACzC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,UAASE,KAAK,CAAC0B,OAAN,CAAcE,KAAM,EAArC,EAAwC;AAChExB,IAAAA,MAAM,EAAE,QADwD;AAEhEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAFuD,GAAxC,CAA1B;AAOA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;;AACA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,2BAA1B,CAAN;AACD;;AAED,SAAO,iBAAP;AACD,C,CAED;;AAEA,OAAO,eAAec,QAAf,CAAwB7B,KAAxB,EAA+B;AACpC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,aAAR,EAAsB;AAC9CM,IAAAA,MAAM,EAAE,MADsC;AAE9Cc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAepB,KAAK,CAAC8B,KAArB,CAFwC;AAG9CzB,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAHqC,GAAtB,CAA1B;AAQA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;;AACA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,sBAA1B,CAAN;AACD;;AAED,SAAO,eAAP;AACD;AAED,OAAO,eAAegB,WAAf,CAA2B/B,KAA3B,EAAkC;AACvC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,WAAUE,KAAK,CAACG,OAAQ,EAAhC,EAAmC;AAC3DC,IAAAA,MAAM,EAAE,QADmD;AAE3DC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAFkD,GAAnC,CAA1B;AAOA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;;AACA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,wBAA1B,CAAN;AACD;;AAED,SAAO,eAAP;AACD,C,CAED;;AAEA,OAAO,eAAeiB,SAAf,CAAyBhC,KAAzB,EAAgC;AACrC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAD0B,EAE1B;AACEE,IAAAA,MAAM,EAAE,MADV;AAEEc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBQ,MAAAA,KAAK,EAAE5B,KAAK,CAAC4B,KADM;AAEnBK,MAAAA,QAAQ,EAAEjC,KAAK,CAACiC;AAFG,KAAf,CAFR;AAME5B,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AANX,GAF0B,CAA5B;AAcA,QAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,uBAA1B,CAAN;AACD;;AAEDQ,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACA,SAAOA,IAAP;AACD,C,CAED;;AAEA,OAAO,eAAe0B,SAAf,CAAyBlC,KAAzB,EAAgC;AACrC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,aAAR,EAAsB;AAC9CM,IAAAA,MAAM,EAAE,KADsC;AAE9CC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAE,YAAYN,KAAK,CAACO;AAF1B;AAFqC,GAAtB,CAA1B;AAOA,MAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;;AACA,MAAI,CAACR,QAAQ,CAACY,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUN,IAAI,CAACO,OAAL,IAAgB,yBAA1B,CAAN;AACD;;AAED,SAAOP,IAAP;AACD","sourcesContent":["const url = 'https://pacific-fortress-54764.herokuapp.com';\n\nexport async function rentCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  let userid = data.stdid;\n  let stdname;\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle');\n  }\n\n  if (props.role === 'student' && data.status === 'rented') {\n    throw new Error('Cycle already Rented');\n  }\n\n  if (props.role === 'guard' && data.status === '') {\n    throw new Error('Cycle not Rented Yet');\n  }\n\n  let cycleid;\n  if (props.role === 'student') {\n    cycleid = props.cycleid;\n    stdname = 'shivam';\n  }\n  if (props.role === 'guard') {\n    cycleid = '';\n    stdname = '';\n  }\n\n  if (props.role === 'student') userid = props.userid;\n  response = await fetch(`${url}/users/${userid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ cycleid }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n\n  data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  let user;\n  if (props.role === 'student') user = props.userid;\n  if (props.role === 'guard') user = '';\n\n  let stat;\n  if (props.role === 'student') stat = 'rented';\n  if (props.role === 'guard') stat = '';\n\n  response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ status: stat, stdid: user }),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n\n  data = await response.json();\n\n  if (!response.ok) {\n    // console.log(response);\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  console.log('rented');\n  return 'Cycle Rented';\n}\n\n//\n\nexport async function addStudent(props) {\n  let response = await fetch(`${url}/users/signup`, {\n    method: 'POST',\n    body: JSON.stringify(props.student),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Add Student.');\n  }\n\n  return 'Student Added';\n}\n\n//\n\nexport async function deleteStudent(props) {\n  let response = await fetch(`${url}/users/${props.student.email}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Delete Student.');\n  }\n\n  return 'Student Deleted';\n}\n\n//\n\nexport async function addCycle(props) {\n  let response = await fetch(`${url}/cycles/add`, {\n    method: 'POST',\n    body: JSON.stringify(props.cycle),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Add Cycle.');\n  }\n\n  return 'Student Added';\n}\n\nexport async function deleteCycle(props) {\n  let response = await fetch(`${url}/cycles/${props.cycleid}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Delete Cycle');\n  }\n\n  return 'Cycle Deleted';\n}\n\n//\n\nexport async function checkUser(props) {\n  const response = await fetch(\n    'https://pacific-fortress-54764.herokuapp.com/users/login',\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        email: props.email,\n        password: props.password,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not Rent Cycle.');\n  }\n\n  console.log(data);\n  return data;\n}\n\n//\n\nexport async function getCycles(props) {\n  let response = await fetch(`${url}/cycles/all`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props.token,\n    },\n  });\n  let data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch Cycles.');\n  }\n\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}