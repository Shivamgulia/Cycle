{"ast":null,"code":"import _slicedToArray from\"/Users/shivamgulia/Developer/Microsoft/Green Rides/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useRef,useState}from'react';import AuthContext from'../../store/auth-context';import ReCAPTCHA from'react-google-recaptcha';import{useHistory}from'react-router-dom';import useHttp from'../hooks/use-http';import{addStudent}from'../lib/api';import LoadingSpinner from'../UI/LoadingSpinner';import classes from'./AddStudentForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddStudentForm=function AddStudentForm(props){console.log(props);var authCtx=useContext(AuthContext);var passwordRef=useRef();var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isVerified=_useState6[0],setIsVerified=_useState6[1];var _useHttp=useHttp(addStudent,false),sendRequest=_useHttp.sendRequest,status=_useHttp.status,error=_useHttp.error;// console.log(JSON.stringify(props.user));\nvar onChange=function onChange(){setIsVerified(true);};var toggleShowPassword=function toggleShowPassword(){if(showPassword)setShowPassword(false);if(!showPassword)setShowPassword(true);};if(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}var submitionHandler=function submitionHandler(event){event.preventDefault();if(isVerified){setIsLoading(true);sendRequest({student:{name:props.user.name,rollno:'100',branch:'user',role:'student',email:props.user.email,password:passwordRef.current.value},token:authCtx.token});setIsLoading(false);// console.log({\n//   name: nameRef.current.value,\n//   rollno: rollnoRef.current.value,\n//   branch: branchRef.current.value,\n//   email: emailRef.current.value,\n//   role: 'student',\n//   password: passwordRef.current.value,\n// });\nhistory.replace('/');}else{alert('Verify that you are a human');}};return/*#__PURE__*/_jsxs(\"section\",{className:classes.auth,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add Student\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitionHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"Name\",children:\"Student Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"Name\",id:\"Name\",required:true,value:props.user.name,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"userName\",id:\"userName\",required:true,value:props.user.email,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',id:\"password\",required:true,ref:passwordRef})]}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:toggleShowPassword}),\" Show Password\",/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"6LcU0VQjAAAAAHdKzj2Ub7RAbfQCf6QXbgOif9Le\",onChange:onChange})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/_jsx(\"button\",{children:\"Create Account\"}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Sending Request....\"})]})]})]});};export default AddStudentForm;","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Microsoft/Green Rides/src/components/auth/AddStudentForm.js"],"names":["useContext","useRef","useState","AuthContext","ReCAPTCHA","useHistory","useHttp","addStudent","LoadingSpinner","classes","AddStudentForm","props","console","log","authCtx","passwordRef","history","showPassword","setShowPassword","isLoading","setIsLoading","isVerified","setIsVerified","sendRequest","status","error","onChange","toggleShowPassword","submitionHandler","event","preventDefault","student","name","user","rollno","branch","role","email","password","current","value","token","replace","alert","auth","control","actions"],"mappings":"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","sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useHistory } from 'react-router-dom';\n\nimport useHttp from '../hooks/use-http';\nimport { addStudent } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = (props) => {\n  console.log(props);\n  const authCtx = useContext(AuthContext);\n  const passwordRef = useRef();\n  const history = useHistory();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerified, setIsVerified] = useState(false);\n\n  const { sendRequest, status, error } = useHttp(addStudent, false);\n\n  // console.log(JSON.stringify(props.user));\n\n  const onChange = () => {\n    setIsVerified(true);\n  };\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n    if (isVerified) {\n      setIsLoading(true);\n      sendRequest({\n        student: {\n          name: props.user.name,\n          rollno: '100',\n          branch: 'user',\n          role: 'student',\n          email: props.user.email,\n          password: passwordRef.current.value,\n        },\n        token: authCtx.token,\n      });\n      setIsLoading(false);\n      // console.log({\n      //   name: nameRef.current.value,\n      //   rollno: rollnoRef.current.value,\n      //   branch: branchRef.current.value,\n      //   email: emailRef.current.value,\n      //   role: 'student',\n      //   password: passwordRef.current.value,\n      // });\n      history.replace('/');\n    } else {\n      alert('Verify that you are a human');\n    }\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input\n            type=\"Name\"\n            id=\"Name\"\n            required\n            value={props.user.name}\n            readOnly\n          />\n        </div>\n        {/* <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input\n            type=\"rollno\"\n            id=\"rollno\"\n            required\n            value={props.user.email.substring(0, 9)}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Branch</label>\n          <input\n            type=\"branch\"\n            id=\"branch\"\n            required\n            value={props.user.email.substring(5, 7)}\n            readOnly\n          />\n        </div> */}\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"userName\"\n            id=\"userName\"\n            required\n            value={props.user.email}\n            readOnly\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div>\n          {/* <Recaptcha\n            sitekey=\"6LfOzVQjAAAAACIJVTM3w4iuAePfdEloNCQvRhj-\"\n            render=\"explicit\"\n            verifyCallback={verifyCallback}\n            onloadCallback={load}\n          /> */}\n          <ReCAPTCHA\n            sitekey=\"6LcU0VQjAAAAAHdKzj2Ub7RAbfQCf6QXbgOif9Le\"\n            onChange={onChange}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>Create Account</button>}\n          {isLoading && <p>Sending Request....</p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}