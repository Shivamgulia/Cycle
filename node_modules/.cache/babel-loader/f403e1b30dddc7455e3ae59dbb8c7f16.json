{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  id: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    rollno: storedRollno,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredData();\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const addCycleHandler = cycle => {\n    localStorage.setItem('cycleid', cycle);\n    setCycle(cycle);\n  };\n\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setName(data.name);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"SYlv4NJLoYooEDfxVr790ReKuv4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","userid","role","cycleid","data","name","id","login","logout","addCycle","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredData","storedToken","localStorage","getItem","storedExpirationDate","storedUserId","storedRole","storedCycle","storedData","storedName","storedBranch","storedRollno","remainingTime","removeItem","branch","rollno","duration","AuthContextProvider","props","tokenData","initialToken","initialUserId","initialRole","initialCycle","initialData","initialName","initialBranch","initialRollno","setData","setUserId","setRole","setToken","cycle","setCycle","setName","setBranch","setRollno","userIsLoggedIn","logoutHandler","setItem","clearTimeout","addCycleHandler","loginHandler","JSON","stringify","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  userid: '',\n  role: '',\n  cycleid: '',\n  data: {},\n  name: '',\n  id: '',\n  login: (data, token, userid, role, cycleid) => {},\n  logout: () => {},\n  addCycle: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredData = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const storedUserId = localStorage.getItem('userid');\n  const storedRole = localStorage.getItem('role');\n  const storedCycle = localStorage.getItem('cycleid');\n  const storedData = localStorage.getItem('data');\n  const storedName = localStorage.getItem('name');\n  const storedBranch = localStorage.getItem('branch');\n  const storedRollno = localStorage.getItem('rollno');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 360) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userid: storedUserId,\n    role: storedRole,\n    cycleid: storedCycle,\n    data: storedData,\n    name: storedName,\n    branch: storedBranch,\n    rollno: storedRollno,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredData();\n\n  let initialToken;\n  let initialUserId;\n  let initialRole;\n  let initialCycle;\n  let initialData;\n  let initialName;\n  let initialBranch;\n  let initialRollno;\n  if (tokenData) {\n    initialData = tokenData.data;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userid;\n    initialRole = tokenData.role;\n    initialCycle = tokenData.cycleid;\n    initialName = tokenData.name;\n    initialBranch = tokenData.branch;\n    initialRollno = tokenData.rollno;\n  }\n  const [data, setData] = useState(initialData);\n  const [userid, setUserId] = useState(initialUserId);\n  const [role, setRole] = useState(initialRole);\n  const [token, setToken] = useState(initialToken);\n  const [cycle, setCycle] = useState(initialCycle);\n  const [name, setName] = useState(initialName);\n  const [branch, setBranch] = useState(initialBranch);\n  const [rollno, setRollno] = useState(initialRollno);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setRole(null);\n    setCycle(null);\n    setData(null);\n    setName(null);\n    setBranch(null);\n    setRollno(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userid');\n    localStorage.removeItem('role');\n    localStorage.removeItem('cycleid');\n    localStorage.removeItem('data');\n    localStorage.removeItem('name');\n    localStorage.removeItem('branch');\n    localStorage.removeItem('rollno');\n    localStorage.setItem('userIsLoggedIn', false);\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const addCycleHandler = (cycle) => {\n    localStorage.setItem('cycleid', cycle);\n    setCycle(cycle);\n  };\n  const loginHandler = (data, token, userid, role, cycle, expirationTime) => {\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setData(data);\n    setToken(token);\n    setRole(role);\n    setUserId(userid);\n    setName(data.name);\n    setBranch(data.branch);\n    setRollno(data.rollno);\n    setCycle(cycle);\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role);\n    localStorage.setItem('userid', userid);\n    localStorage.setItem('cycleid', cycle);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('branch', data.branch);\n    localStorage.setItem('rollno', data.rollno);\n    localStorage.setItem('userIsLoggedIn', true);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('data', JSON.stringify(data));\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    data: data,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    userid: userid,\n    role: role,\n    cycleid: cycle,\n    name: name,\n    branch: branch,\n    rollno: rollno,\n    login: loginHandler,\n    logout: logoutHandler,\n    addCycle: addCycleHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}