{"ast":null,"code":"var _jsxFileName = \"/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddStudentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport useHttp from '../hooks/use-http';\nimport classes from './AddStudentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddStudentForm = () => {\n  _s();\n\n  const nameRef = useRef();\n  const rollnoRef = useRef();\n  const branchRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const submitionHandler = event => {\n    event.preventDefault();\n    console.log({\n      name: nameRef.current.value,\n      rollno: rollnoRef.current.value,\n      branch: branchRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Name\",\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Name\",\n          id: \"Name\",\n          required: true,\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rollno\",\n          children: \"Student Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"rollno\",\n          id: \"rollno\",\n          required: true,\n          ref: rollnoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branch\",\n          children: \"Student Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"branch\",\n          id: \"branch\",\n          required: true,\n          ref: branchRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Student Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"userName\",\n          id: \"userName\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Student Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: toggleShowPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" Show Password\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading &&\n        /*#__PURE__*/\n        // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n        _jsxDEV(\"button\", {\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddStudentForm, \"XtDfYPcVaoGDJk1AbaKtk4yRjN8=\");\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["/Users/shivamgulia/Developer/Green Riders/JS/cycle/src/components/Admin/AddStudentForm.js"],"names":["useRef","useState","useHttp","classes","AddStudentForm","nameRef","rollnoRef","branchRef","emailRef","passwordRef","showPassword","setShowPassword","isLoading","setIsLoading","toggleShowPassword","submitionHandler","event","preventDefault","console","log","name","current","value","rollno","branch","email","password","auth","control","actions"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport useHttp from '../hooks/use-http';\nimport classes from './AddStudentForm.module.css';\n\nconst AddStudentForm = () => {\n  const nameRef = useRef();\n  const rollnoRef = useRef();\n  const branchRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleShowPassword = () => {\n    if (showPassword) setShowPassword(false);\n    if (!showPassword) setShowPassword(true);\n  };\n\n  const submitionHandler = (event) => {\n    event.preventDefault();\n\n    console.log({\n      name: nameRef.current.value,\n      rollno: rollnoRef.current.value,\n      branch: branchRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n    });\n  };\n  return (\n    <section className={classes.auth}>\n      {/* <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1> */}\n      <h1>Add Student</h1>\n      <form onSubmit={submitionHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"Name\">Student Name</label>\n          <input type=\"Name\" id=\"Name\" required ref={nameRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"rollno\">Student Roll Number</label>\n          <input type=\"rollno\" id=\"rollno\" required ref={rollnoRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"branch\">Student Branch</label>\n          <input type=\"branch\" id=\"branch\" required ref={branchRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Student Email</label>\n          <input type=\"userName\" id=\"userName\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Student Password</label>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            required\n            ref={passwordRef}\n          />\n        </div>\n        <input type=\"checkbox\" onClick={toggleShowPassword} /> Show Password\n        <div className={classes.actions}>\n          {!isLoading && (\n            // <button>{isLogin ? 'Login' : 'Create Account'}</button>\n            <button>Add Student</button>\n          )}\n          {isLoading && <p>Sending Request....</p>}\n          {/* <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button> */}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddStudentForm;\n"]},"metadata":{},"sourceType":"module"}